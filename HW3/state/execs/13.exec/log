main() {
  Execution directory: /Users/yi-changchung/Desktop/OSU/CSE5525/HW3/state/execs/13.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog [1.8s, cum. 1.8s]
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog [2.1s, cum. 5.0s]
        698 statements
      } [6.6s, cum. 6.6s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/dc/_4hbd93902l5l_vb4jnppn040000gn/T/tmp1fqplfzi.dlog {
        Parsing /var/folders/dc/_4hbd93902l5l_vb4jnppn040000gn/T/tmp1fqplfzi.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          _parse([query], answer(A,(B,(B,(B,C),const(C,D,(D,E),const(E,F,(F,G),const(G,H,(H,I),const(I,J,(J,K),const)))))))).
          DatalogParser.loadSafe(): end
        } [1.8s, cum. 1.8s]
        560 statements
        Example tmp1fqplfzi.dlog:0: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:1: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:2: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:3: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:4: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:5: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:6: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:7: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:8: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:9: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:10: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:11: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:12: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:13: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:14: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:15: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:16: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:17: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:18: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:19: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:20: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:21: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:22: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:23: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:24: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:25: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:26: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:27: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:28: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:29: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:30: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:31: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:32: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:33: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:34: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:35: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:36: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:37: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:38: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:39: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:40: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:41: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:42: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:43: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:44: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:45: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:46: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:47: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:48: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:49: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:50: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:51: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:52: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:53: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:54: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:55: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:56: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:57: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:58: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:59: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:60: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:61: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:62: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:63: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:64: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:65: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:66: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:67: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:68: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:69: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:70: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:71: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:72: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:73: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:74: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:75: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:76: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:77: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:78: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:79: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:80: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:81: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:82: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:83: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:84: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:85: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:86: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:87: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:88: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:89: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:90: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:91: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:92: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:93: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:94: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:95: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:96: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:97: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:98: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:99: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:100: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:101: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:102: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:103: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:104: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:105: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:106: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:107: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:108: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:109: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:110: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:111: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:112: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:113: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:114: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:115: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:116: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:117: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:118: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:119: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:120: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:121: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:122: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:123: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:124: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:125: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:126: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:128: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:129: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:130: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:131: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:132: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:133: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:134: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:135: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:136: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:137: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:138: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:139: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:140: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:141: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:142: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:143: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:144: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:146: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:147: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:148: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:149: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:150: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:151: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:152: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:153: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:154: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:155: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:156: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:157: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:159: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:160: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:161: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:162: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:163: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:164: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:165: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:166: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:167: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:168: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:169: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:170: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:171: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:172: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:173: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:174: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:175: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:176: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:177: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:178: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:179: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:180: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:181: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:182: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:183: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:184: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:185: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:186: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:187: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:188: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:189: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:190: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:191: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:192: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:193: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:194: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:195: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:196: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:197: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:198: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:199: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:200: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:201: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:202: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:203: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:204: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:205: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:206: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:207: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:208: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:209: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:210: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:211: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:212: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:213: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:214: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:215: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:216: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:217: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:218: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:219: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:220: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:221: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:222: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:223: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:224: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:225: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:226: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:227: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:228: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:229: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:230: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:231: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:232: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:233: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:234: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:235: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:236: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:237: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:238: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:239: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:240: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:241: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:242: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:243: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:244: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:245: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:246: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:247: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:248: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:249: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:250: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:251: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:252: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:253: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:254: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:255: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:256: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:257: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:258: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:259: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:260: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:261: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:262: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:263: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:264: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:265: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:266: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:267: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:268: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:270: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:271: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:272: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:273: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:274: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:275: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:276: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:277: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:278: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp1fqplfzi.dlog:279: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
      } [2.1s, cum. 8.8s]
    } [8.8s, cum. 8.8s]
    Randomly splitting 280 general examples
    196 training examples, 84 test examples
  } [8.8s, cum. 9.1s]
  Execution directory: /Users/yi-changchung/Desktop/OSU/CSE5525/HW3/state/execs/13.exec
} [9.1s]
