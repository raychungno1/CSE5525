main() {
  Execution directory: /Users/yi-changchung/Desktop/OSU/CSE5525/HW3/state/execs/37.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog [2.5s, cum. 2.5s]
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog [2.4s, cum. 6.0s]
        698 statements
      } [7.8s, cum. 7.8s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/dc/_4hbd93902l5l_vb4jnppn040000gn/T/tmp83nzzasm.dlog {
        Parsing /var/folders/dc/_4hbd93902l5l_vb4jnppn040000gn/T/tmp83nzzasm.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,smallest(A,(state(A),loc(A,@))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),loc(C,B),state(C),@))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(austin,_)),capital(C),A)))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,@),state(A))))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),next_to(B,A)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,(state(B),loc(C,B),const(C,cityid(austin,_))),@))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),next_to(B,C),const(C,countryid(usa))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,longest(B,(state(A),loc(A,B),state(A))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,(state(B),loc(C,B),const(C,cityid(austin,_))))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),const(C,cityid(kalamazoo,_)),loc(C,B)))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,A),@)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,@)))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),loc(C,B),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,place(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(elevation(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,state(A)))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas)))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(size(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,largest(A,(state(A),loc(B,A),state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),smallest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(population(B,A),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))),A))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,A),state(B))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,A),@)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),population(A,B)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas)))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),largest(B,state(B)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(elevation(B,A),const(B,cityid("san jose",_))))).
          _parse([query], answer(A,count(B,(river(B),traverse(B,A)),@))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,@))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))).
          _parse([query], answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(austin,_))),?))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))).
          _parse([query], answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,cityid(austin,_)),capital(C),loc(C,B),A)))).
          _parse([query], answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,smallest(A,(river(A),loc(A,@))))).
          _parse([query], answer(A,(density(B,A),largest(B,state(B))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(mississippi)),river(C),traverse(C,B))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(state(A),loc(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,@),state(A)))).
          _parse([query], answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))).
          _parse([query], answer(A,most(A,B,(state(A),loc(B,A),river(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),state(C),next_to(C,D),state(D),next_to(D,E),state(E),next_to(E,F),const(F,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(area(B,A),state(B),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,stateid(texas)),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,most(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,(population(B,A),state(B),loc(C,B),state(C),const(D,riverid(mississippi)),traverse(D,C)))).
          DatalogParser.loadSafe(): end
        } [4.5s, cum. 4.5s]
        560 statements
        Example tmp83nzzasm.dlog:0: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:1: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:2: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:3: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:4: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:5: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:6: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:7: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:8: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:9: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:10: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:11: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:12: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:13: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:14: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:15: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:16: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:17: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:18: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:19: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:20: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:21: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:22: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:23: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:24: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:25: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:26: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:27: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:28: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:29: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:30: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:31: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:32: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:33: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:34: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:35: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:36: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:37: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:38: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:39: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:40: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:41: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:42: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:43: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:44: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:45: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:46: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:47: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:48: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:49: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:50: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:51: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:52: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:53: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:54: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:55: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:56: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:57: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:58: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:59: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:60: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:61: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:62: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:63: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:64: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:65: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:66: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:67: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:68: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:69: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:70: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:71: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:72: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:73: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:74: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:75: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:76: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:77: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:78: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:79: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:80: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:81: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:82: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:83: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:84: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:85: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:86: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:87: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:88: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:89: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:90: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:91: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:92: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:93: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:94: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:95: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:96: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:97: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:98: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:99: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:100: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:101: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:102: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:103: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:104: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:105: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:106: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:107: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:108: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:109: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:110: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:111: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:112: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:113: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:114: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:115: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:116: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:117: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:118: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:119: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:120: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:121: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:122: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:123: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:124: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:125: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:126: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:128: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:129: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:130: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:131: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:132: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:133: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:134: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:135: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:136: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:137: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:138: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:139: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:140: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:141: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:142: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:143: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:144: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:146: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:147: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:148: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:149: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:150: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:151: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:152: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:153: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:154: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:155: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:156: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:157: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:159: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:160: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:161: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:162: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:163: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:164: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:165: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:166: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:167: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:168: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:169: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:170: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:171: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:172: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:173: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:174: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:175: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:176: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:177: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:178: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:179: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:180: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:181: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:182: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:183: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:184: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:185: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:186: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:187: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:188: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:189: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:190: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:191: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:192: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:193: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:194: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:195: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:196: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:197: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:198: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:199: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:200: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:201: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:202: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:203: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:204: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:205: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:206: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:207: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:208: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:209: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:210: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:211: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:212: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:213: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:214: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:215: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:216: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:217: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:218: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:219: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:220: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:221: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:222: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:223: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:224: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:225: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:226: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:227: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:228: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:229: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:230: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:231: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:232: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:233: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:234: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:235: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:236: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:237: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:238: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:239: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:240: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:241: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:242: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:243: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:244: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:245: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:246: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:247: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:248: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:249: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:250: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:251: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:252: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:253: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:254: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:255: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:256: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:257: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:258: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:259: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:260: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:261: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:262: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:263: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:264: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:265: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:266: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:267: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:268: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:270: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:271: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:272: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:273: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:274: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:275: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:276: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:277: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:278: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:279: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:280: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:281: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmp83nzzasm.dlog:282: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:283: query => {} | answer(A,(major(A),river(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:284: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:285: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:286: query => {[port arthur_tx:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:287: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:288: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:289: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp83nzzasm.dlog:290: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmp83nzzasm.dlog:291: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:292: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:293: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp83nzzasm.dlog:294: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp83nzzasm.dlog:295: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:296: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:297: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmp83nzzasm.dlog:299: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp83nzzasm.dlog:300: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp83nzzasm.dlog:301: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:302: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:303: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:304: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:305: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:306: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:307: query => {[Join failed syntactically: {[kentucky:stateid/2,cumberland:riverid/2],[kansas:stateid/2,cimarron:riverid/2],[north dakota:stateid/2,missouri:riverid/2],[arkansas:stateid/2,white:riverid/2],[utah:stateid/2,san juan:riverid/2],[colorado:stateid/2,north platte:riverid/2],[louisiana:stateid/2,ouachita:riverid/2],[vermont:stateid/2,connecticut:riverid/2],[arkansas:stateid/2,mississippi:riverid/2],[arizona:stateid/2,colorado:riverid/2],[illinois:stateid/2,mississippi:riverid/2],[district of columbia:stateid/2,potomac:riverid/2],[missouri:stateid/2,st. francis:riverid/2],[new mexico:stateid/2,rio grande:riverid/2],[indiana:stateid/2,ohio:riverid/2],[new mexico:stateid/2,cimarron:riverid/2],[ohio:stateid/2,wabash:riverid/2],[tennessee:stateid/2,cumberland:riverid/2],[pennsylvania:stateid/2,allegheny:riverid/2],[nebraska:stateid/2,missouri:riverid/2],[wyoming:stateid/2,north platte:riverid/2],[nebraska:stateid/2,south platte:riverid/2],[wyoming:stateid/2,little missouri:riverid/2],[missouri:stateid/2,missouri:riverid/2],[new jersey:stateid/2,delaware:riverid/2],[alabama:stateid/2,tennessee:riverid/2],[connecticut:stateid/2,connecticut:riverid/2],[montana:stateid/2,yellowstone:riverid/2],[montana:stateid/2,powder:riverid/2],[nevada:stateid/2,colorado:riverid/2],[oregon:stateid/2,columbia:riverid/2],[texas:stateid/2,red:riverid/2],[north dakota:stateid/2,little missouri:riverid/2],[alabama:stateid/2,tombigbee:riverid/2],[kentucky:stateid/2,ohio:riverid/2],[montana:stateid/2,clark fork:riverid/2],[texas:stateid/2,rio grande:riverid/2],[tennessee:stateid/2,tennessee:riverid/2],[colorado:stateid/2,rio grande:riverid/2],[colorado:stateid/2,colorado:riverid/2],[arkansas:stateid/2,red:riverid/2],[oklahoma:stateid/2,canadian:riverid/2],[colorado:stateid/2,smoky hill:riverid/2],[illinois:stateid/2,ohio:riverid/2],[louisiana:stateid/2,mississippi:riverid/2],[new mexico:stateid/2,red:riverid/2],[arizona:stateid/2,gila:riverid/2],[oklahoma:stateid/2,red:riverid/2],[south dakota:stateid/2,little missouri:riverid/2],[washington:stateid/2,snake:riverid/2],[wisconsin:stateid/2,mississippi:riverid/2],[indiana:stateid/2,wabash:riverid/2],[north carolina:stateid/2,roanoke:riverid/2],[maryland:stateid/2,potomac:riverid/2],[texas:stateid/2,washita:riverid/2],[colorado:stateid/2,republican:riverid/2],[delaware:stateid/2,delaware:riverid/2],[north dakota:stateid/2,cheyenne:riverid/2],[oklahoma:stateid/2,washita:riverid/2],[kentucky:stateid/2,tennessee:riverid/2],[wisconsin:stateid/2,rock:riverid/2],[colorado:stateid/2,green:riverid/2],[idaho:stateid/2,snake:riverid/2],[colorado:stateid/2,south platte:riverid/2],[michigan:stateid/2,pearl:riverid/2],[new mexico:stateid/2,san juan:riverid/2],[north dakota:stateid/2,yellowstone:riverid/2],[new hampshire:stateid/2,connecticut:riverid/2],[utah:stateid/2,green:riverid/2],[louisiana:stateid/2,red:riverid/2],[iowa:stateid/2,mississippi:riverid/2],[arkansas:stateid/2,arkansas:riverid/2],[colorado:stateid/2,arkansas:riverid/2],[north dakota:stateid/2,dakota:riverid/2],[minnesota:stateid/2,mississippi:riverid/2],[missouri:stateid/2,white:riverid/2],[california:stateid/2,colorado:riverid/2],[oklahoma:stateid/2,arkansas:riverid/2],[arkansas:stateid/2,st. francis:riverid/2],[iowa:stateid/2,missouri:riverid/2],[pennsylvania:stateid/2,ohio:riverid/2],[mississippi:stateid/2,tombigbee:riverid/2],[new york:stateid/2,hudson:riverid/2],[new york:stateid/2,allegheny:riverid/2],[oklahoma:stateid/2,cimarron:riverid/2],[wyoming:stateid/2,niobrara:riverid/2],[tennessee:stateid/2,mississippi:riverid/2],[west virginia:stateid/2,potomac:riverid/2],[virginia:stateid/2,roanoke:riverid/2],[wyoming:stateid/2,bighorn:riverid/2],[kansas:stateid/2,arkansas:riverid/2],[arkansas:stateid/2,ouachita:riverid/2],[idaho:stateid/2,clark fork:riverid/2],[utah:stateid/2,colorado:riverid/2],[south carolina:stateid/2,wateree catawba:riverid/2],[texas:stateid/2,canadian:riverid/2],[mississippi:stateid/2,mississippi:riverid/2],[colorado:stateid/2,canadian:riverid/2],[virginia:stateid/2,potomac:riverid/2],[nebraska:stateid/2,north platte:riverid/2],[wyoming:stateid/2,green:riverid/2],[pennsylvania:stateid/2,delaware:riverid/2],[new mexico:stateid/2,pecos:riverid/2],[missouri:stateid/2,mississippi:riverid/2],[oklahoma:stateid/2,neosho:riverid/2],[montana:stateid/2,bighorn:riverid/2],[wyoming:stateid/2,yellowstone:riverid/2],[wyoming:stateid/2,snake:riverid/2],[south dakota:stateid/2,dakota:riverid/2],[new mexico:stateid/2,gila:riverid/2],[montana:stateid/2,missouri:riverid/2],[new york:stateid/2,delaware:riverid/2],[wyoming:stateid/2,powder:riverid/2],[kansas:stateid/2,smoky hill:riverid/2],[washington:stateid/2,columbia:riverid/2],[new mexico:stateid/2,canadian:riverid/2],[new jersey:stateid/2,hudson:riverid/2],[west virginia:stateid/2,ohio:riverid/2],[nebraska:stateid/2,republican:riverid/2],[georgia:stateid/2,chattahoochee:riverid/2],[kentucky:stateid/2,mississippi:riverid/2],[colorado:stateid/2,san juan:riverid/2],[texas:stateid/2,pecos:riverid/2],[illinois:stateid/2,wabash:riverid/2],[montana:stateid/2,little missouri:riverid/2],[ohio:stateid/2,ohio:riverid/2],[nebraska:stateid/2,niobrara:riverid/2],[illinois:stateid/2,rock:riverid/2],[kansas:stateid/2,neosho:riverid/2],[massachusetts:stateid/2,connecticut:riverid/2],[south dakota:stateid/2,missouri:riverid/2],[north carolina:stateid/2,wateree catawba:riverid/2],[kansas:stateid/2,republican:riverid/2],[louisiana:stateid/2,pearl:riverid/2],[wyoming:stateid/2,cheyenne:riverid/2],[oregon:stateid/2,snake:riverid/2],[florida:stateid/2,chattahoochee:riverid/2]}:{[stateid/2,riverid/2]}[1] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),state(B),next_to(B,A)))
        Example tmp83nzzasm.dlog:308: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:309: query => {[mississippi:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmp83nzzasm.dlog:310: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:311: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp83nzzasm.dlog:312: query => {[5count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmp83nzzasm.dlog:313: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp83nzzasm.dlog:314: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,washita:riverid/2],[texas,texas:stateid/2,texas:stateid/2,irving_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mesquite_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,corpus christi_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,grand prairie_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,red:riverid/2],[texas,texas:stateid/2,texas:stateid/2,arlington_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,beaumont_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,brownsville_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,longview_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,waco_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,guadalupe peak:placeid/2],[texas,texas:stateid/2,texas:stateid/2,lubbock_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,gulf of mexico:placeid/2],[texas,texas:stateid/2,texas:stateid/2,pasadena_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,dallas_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,fort worth_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,el paso_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,odessa_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,port arthur_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,canadian:riverid/2],[texas,texas:stateid/2,texas:stateid/2,richardson_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,abilene_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,laredo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,tyler_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,garland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,wichita falls_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,pecos:riverid/2],[texas,texas:stateid/2,texas:stateid/2,midland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,plano_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,austin_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,amarillo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mcallen_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,san angelo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,houston_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,rio grande:riverid/2],[texas,texas:stateid/2,texas:stateid/2,san antonio_tx:cityid/3]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(population(B,A),largest(B,(state(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp83nzzasm.dlog:315: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:316: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example tmp83nzzasm.dlog:317: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))
        Example tmp83nzzasm.dlog:318: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:319: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:320: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:321: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp83nzzasm.dlog:322: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:323: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:324: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp83nzzasm.dlog:325: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:326: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))
        Example tmp83nzzasm.dlog:327: query => {[Join failed syntactically: {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[cumberland:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[tennessee:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]}:{[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),state(B),next_to(B,C),const(C,countryid(usa))))
        Example tmp83nzzasm.dlog:328: query => {[port arthur_tx:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:329: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:330: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmp83nzzasm.dlog:332: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:333: query => {[Join failed syntactically: {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[0] => {}:error]} | answer(A,most(A,B,(state(A),traverse(A,B),state(B))))
        Example tmp83nzzasm.dlog:334: query => {[iowa:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[wyoming:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[north carolina:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))
        Example tmp83nzzasm.dlog:335: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:336: query => {[Join failed syntactically: {[new york:stateid/2,usa:countryid/2],[new hampshire:stateid/2,usa:countryid/2],[missouri:stateid/2,usa:countryid/2],[iowa:stateid/2,usa:countryid/2],[maine:stateid/2,usa:countryid/2],[idaho:stateid/2,usa:countryid/2],[florida:stateid/2,usa:countryid/2],[ohio:stateid/2,usa:countryid/2],[alabama:stateid/2,usa:countryid/2],[kansas:stateid/2,usa:countryid/2],[alaska:stateid/2,usa:countryid/2],[north dakota:stateid/2,usa:countryid/2],[connecticut:stateid/2,usa:countryid/2],[kentucky:stateid/2,usa:countryid/2],[north carolina:stateid/2,usa:countryid/2],[georgia:stateid/2,usa:countryid/2],[new jersey:stateid/2,usa:countryid/2],[indiana:stateid/2,usa:countryid/2],[washington:stateid/2,usa:countryid/2],[maryland:stateid/2,usa:countryid/2],[michigan:stateid/2,usa:countryid/2],[nebraska:stateid/2,usa:countryid/2],[california:stateid/2,usa:countryid/2],[vermont:stateid/2,usa:countryid/2],[utah:stateid/2,usa:countryid/2],[minnesota:stateid/2,usa:countryid/2],[south carolina:stateid/2,usa:countryid/2],[pennsylvania:stateid/2,usa:countryid/2],[wyoming:stateid/2,usa:countryid/2],[colorado:stateid/2,usa:countryid/2],[hawaii:stateid/2,usa:countryid/2],[virginia:stateid/2,usa:countryid/2],[arizona:stateid/2,usa:countryid/2],[new mexico:stateid/2,usa:countryid/2],[illinois:stateid/2,usa:countryid/2],[wisconsin:stateid/2,usa:countryid/2],[tennessee:stateid/2,usa:countryid/2],[oklahoma:stateid/2,usa:countryid/2],[mississippi:stateid/2,usa:countryid/2],[montana:stateid/2,usa:countryid/2],[rhode island:stateid/2,usa:countryid/2],[louisiana:stateid/2,usa:countryid/2],[nevada:stateid/2,usa:countryid/2],[west virginia:stateid/2,usa:countryid/2],[oregon:stateid/2,usa:countryid/2],[massachusetts:stateid/2,usa:countryid/2],[arkansas:stateid/2,usa:countryid/2],[south dakota:stateid/2,usa:countryid/2],[delaware:stateid/2,usa:countryid/2],[texas:stateid/2,usa:countryid/2],[district of columbia:stateid/2,usa:countryid/2]}:{[stateid/2,countryid/2]}[1] and {[colorado:riverid/2,2333000length],[wateree catawba:riverid/2,636000length],[san juan:riverid/2,579000length],[st. francis:riverid/2,684000length],[hudson:riverid/2,492000length],[gila:riverid/2,805000length],[powder:riverid/2,603000length],[neosho:riverid/2,740000length],[north platte:riverid/2,1094000length],[cimarron:riverid/2,965000length],[potomac:riverid/2,462000length],[ouachita:riverid/2,973000length],[tennessee:riverid/2,1049000length],[mississippi:riverid/2,3778000length],[canadian:riverid/2,1458000length],[arkansas:riverid/2,2333000length],[roanoke:riverid/2,660000length],[cumberland:riverid/2,1105000length],[green:riverid/2,1175000length],[republican:riverid/2,679000length],[little missouri:riverid/2,901000length],[wabash:riverid/2,764000length],[rio grande:riverid/2,3033000length],[yellowstone:riverid/2,1080000length],[tombigbee:riverid/2,658000length],[snake:riverid/2,1670000length],[washita:riverid/2,805000length],[rock:riverid/2,459000length],[delaware:riverid/2,451000length],[connecticut:riverid/2,655000length],[missouri:riverid/2,3968000length],[bighorn:riverid/2,541000length],[dakota:riverid/2,1142000length],[pecos:riverid/2,805000length],[cheyenne:riverid/2,848000length],[niobrara:riverid/2,693000length],[chattahoochee:riverid/2,702000length],[pearl:riverid/2,788000length],[clark fork:riverid/2,483000length],[red:riverid/2,1638000length],[white:riverid/2,1110000length],[columbia:riverid/2,1953000length],[ohio:riverid/2,1569000length],[allegheny:riverid/2,523000length],[south platte:riverid/2,682000length],[smoky hill:riverid/2,869000length]}:{[riverid/2,length]}[0] => {}:error]} | answer(A,longest(B,(state(A),loc(A,B),state(A))))
        Example tmp83nzzasm.dlog:337: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:338: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:339: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),largest(B,(state(B),loc(C,B),const(C,cityid(austin,_))))))
        Example tmp83nzzasm.dlog:340: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:341: query => {[Join failed syntactically: {[california:stateid/2,pomona_ca:cityid/3],[california:stateid/2,san diego_ca:cityid/3],[california:stateid/2,east los angeles_ca:cityid/3],[minnesota:stateid/2,red:lakeid/2],[connecticut:stateid/2,greenwich_ct:cityid/3],[california:stateid/2,fremont_ca:cityid/3],[california:stateid/2,thousand oaks_ca:cityid/3],[alaska:stateid/2,foraker:mountainid/2],[california:stateid/2,san francisco_ca:cityid/3],[maryland:stateid/2,silver spring_md:cityid/3],[kentucky:stateid/2,cumberland:riverid/2],[tennessee:stateid/2,knoxville_tn:cityid/3],[kansas:stateid/2,cimarron:riverid/2],[north dakota:stateid/2,missouri:riverid/2],[new mexico:stateid/2,las cruces_nm:cityid/3],[arkansas:stateid/2,white:riverid/2],[north carolina:stateid/2,durham_nc:cityid/3],[california:stateid/2,pasadena_ca:cityid/3],[virginia:stateid/2,roanoke_va:cityid/3],[virginia:stateid/2,norfolk_va:cityid/3],[minnesota:stateid/2,rainy:lakeid/2],[utah:stateid/2,san juan:riverid/2],[vermont:stateid/2,mount mansfield:placeid/2],[kansas:stateid/2,overland park_ks:cityid/3],[iowa:stateid/2,dubuque_ia:cityid/3],[massachusetts:stateid/2,cambridge_ma:cityid/3],[montana:stateid/2,granite peak:placeid/2],[oklahoma:stateid/2,black mesa:placeid/2],[louisiana:stateid/2,metairie_la:cityid/3],[georgia:stateid/2,albany_ga:cityid/3],[ohio:stateid/2,kettering_oh:cityid/3],[massachusetts:stateid/2,medford_ma:cityid/3],[virginia:stateid/2,mount rogers:placeid/2],[colorado:stateid/2,maroon:mountainid/2],[colorado:stateid/2,arvada_co:cityid/3],[new jersey:stateid/2,clifton_nj:cityid/3],[texas:stateid/2,fort worth_tx:cityid/3],[louisiana:stateid/2,monroe_la:cityid/3],[colorado:stateid/2,north platte:riverid/2],[louisiana:stateid/2,ouachita:riverid/2],[north carolina:stateid/2,atlantic ocean:placeid/2],[connecticut:stateid/2,norwalk_ct:cityid/3],[nebraska:stateid/2,lincoln_ne:cityid/3],[louisiana:stateid/2,driskill mountain:placeid/2],[vermont:stateid/2,connecticut:riverid/2],[new york:stateid/2,new york_ny:cityid/3],[maine:stateid/2,auburn_me:cityid/3],[rhode island:stateid/2,pawtucket_ri:cityid/3],[california:stateid/2,santa monica_ca:cityid/3],[arkansas:stateid/2,mississippi:riverid/2],[california:stateid/2,sill:mountainid/2],[new york:stateid/2,mount vernon_ny:cityid/3],[alabama:stateid/2,gulf of mexico:placeid/2],[ohio:stateid/2,euclid_oh:cityid/3],[arizona:stateid/2,colorado:riverid/2],[massachusetts:stateid/2,lynn_ma:cityid/3],[illinois:stateid/2,mississippi:riverid/2],[connecticut:stateid/2,mount frissell:placeid/2],[california:stateid/2,oakland_ca:cityid/3],[michigan:stateid/2,lake erie:placeid/2],[texas:stateid/2,houston_tx:cityid/3],[district of columbia:stateid/2,potomac:riverid/2],[colorado:stateid/2,princeton:mountainid/2],[west virginia:stateid/2,wheeling_wv:cityid/3],[wisconsin:stateid/2,winnebago:lakeid/2],[minnesota:stateid/2,minneapolis_mn:cityid/3],[georgia:stateid/2,macon_ga:cityid/3],[missouri:stateid/2,st. francis:riverid/2],[new mexico:stateid/2,rio grande:riverid/2],[florida:stateid/2,jacksonville_fl:cityid/3],[district of columbia:stateid/2,washington_dc:cityid/3],[indiana:stateid/2,ohio:riverid/2],[west virginia:stateid/2,potomac river:placeid/2],[virginia:stateid/2,alexandria_va:cityid/3],[oregon:stateid/2,mount hood:placeid/2],[colorado:stateid/2,boulder_co:cityid/3],[new mexico:stateid/2,cimarron:riverid/2],[virginia:stateid/2,lynchburg_va:cityid/3],[illinois:stateid/2,aurora_il:cityid/3],[florida:stateid/2,orlando_fl:cityid/3],[nevada:stateid/2,tahoe:lakeid/2],[alaska:stateid/2,juneau_ak:cityid/3],[arkansas:stateid/2,pine bluff_ar:cityid/3],[california:stateid/2,glendale_ca:cityid/3],[california:stateid/2,richmond_ca:cityid/3],[ohio:stateid/2,wabash:riverid/2],[tennessee:stateid/2,cumberland:riverid/2],[south dakota:stateid/2,pierre_sd:cityid/3],[california:stateid/2,costa mesa_ca:cityid/3],[west virginia:stateid/2,charleston_wv:cityid/3],[georgia:stateid/2,columbus_ga:cityid/3],[alaska:stateid/2,blackburn:mountainid/2],[louisiana:stateid/2,lafayette_la:cityid/3],[utah:stateid/2,kings peak:placeid/2],[massachusetts:stateid/2,springfield_ma:cityid/3],[pennsylvania:stateid/2,allegheny:riverid/2],[missouri:stateid/2,st. francis river:placeid/2],[california:stateid/2,san leandro_ca:cityid/3],[connecticut:stateid/2,new britain_ct:cityid/3],[texas:stateid/2,odessa_tx:cityid/3],[wisconsin:stateid/2,madison_wi:cityid/3],[connecticut:stateid/2,new haven_ct:cityid/3],[colorado:stateid/2,el diente:mountainid/2],[maryland:stateid/2,bethesda_md:cityid/3],[nebraska:stateid/2,north platte_ne:cityid/3],[colorado:stateid/2,massive:mountainid/2],[colorado:stateid/2,bross:mountainid/2],[new mexico:stateid/2,roswell_nm:cityid/3],[nebraska:stateid/2,missouri:riverid/2],[california:stateid/2,stockton_ca:cityid/3],[colorado:stateid/2,castle:mountainid/2],[michigan:stateid/2,livonia_mi:cityid/3],[colorado:stateid/2,belford:mountainid/2],[arizona:stateid/2,scottsdale_az:cityid/3],[ohio:stateid/2,elyria_oh:cityid/3],[new jersey:stateid/2,irvington_nj:cityid/3],[mississippi:stateid/2,biloxi_ms:cityid/3],[mississippi:stateid/2,hattiesburg_ms:cityid/3],[colorado:stateid/2,pueblo_co:cityid/3],[wyoming:stateid/2,rock springs_wy:cityid/3],[florida:stateid/2,okeechobee:lakeid/2],[colorado:stateid/2,antero:mountainid/2],[wyoming:stateid/2,north platte:riverid/2],[montana:stateid/2,kootenai river:placeid/2],[wisconsin:stateid/2,west allis_wi:cityid/3],[georgia:stateid/2,savannah_ga:cityid/3],[nebraska:stateid/2,south platte:riverid/2],[michigan:stateid/2,wyoming_mi:cityid/3],[alaska:stateid/2,bona:mountainid/2],[pennsylvania:stateid/2,erie_pa:cityid/3],[illinois:stateid/2,waukegan_il:cityid/3],[maine:stateid/2,augusta_me:cityid/3],[mississippi:stateid/2,woodall mountain:placeid/2],[new jersey:stateid/2,jersey city_nj:cityid/3],[california:stateid/2,lakewood_ca:cityid/3],[colorado:stateid/2,la plata:mountainid/2],[missouri:stateid/2,springfield_mo:cityid/3],[wyoming:stateid/2,little missouri:riverid/2],[missouri:stateid/2,missouri:riverid/2],[rhode island:stateid/2,providence_ri:cityid/3],[kansas:stateid/2,topeka_ks:cityid/3],[florida:stateid/2,miami beach_fl:cityid/3],[indiana:stateid/2,hammond_in:cityid/3],[alaska:stateid/2,sanford:mountainid/2],[california:stateid/2,citrus heights_ca:cityid/3],[vermont:stateid/2,burlington_vt:cityid/3],[new jersey:stateid/2,delaware:riverid/2],[alabama:stateid/2,tennessee:riverid/2],[illinois:stateid/2,arlington heights_il:cityid/3],[california:stateid/2,salinas_ca:cityid/3],[california:stateid/2,huntington beach_ca:cityid/3],[california:stateid/2,buena park_ca:cityid/3],[pennsylvania:stateid/2,harrisburg_pa:cityid/3],[illinois:stateid/2,peoria_il:cityid/3],[ohio:stateid/2,cincinnati_oh:cityid/3],[ohio:stateid/2,lorain_oh:cityid/3],[connecticut:stateid/2,connecticut:riverid/2],[nevada:stateid/2,las vegas_nv:cityid/3],[montana:stateid/2,yellowstone:riverid/2],[arizona:stateid/2,colorado river:placeid/2],[california:stateid/2,newport beach_ca:cityid/3],[montana:stateid/2,helena_mt:cityid/3],[nevada:stateid/2,reno_nv:cityid/3],[florida:stateid/2,walton county:placeid/2],[illinois:stateid/2,mississippi river:placeid/2],[maine:stateid/2,lewiston_me:cityid/3],[california:stateid/2,concord_ca:cityid/3],[michigan:stateid/2,southfield_mi:cityid/3],[north carolina:stateid/2,high point_nc:cityid/3],[florida:stateid/2,tallahassee_fl:cityid/3],[illinois:stateid/2,joliet_il:cityid/3],[nevada:stateid/2,sparks_nv:cityid/3],[indiana:stateid/2,terre haute_in:cityid/3],[idaho:stateid/2,idaho falls_id:cityid/3],[montana:stateid/2,powder:riverid/2],[new jersey:stateid/2,elizabeth_nj:cityid/3],[tennessee:stateid/2,chattanooga_tn:cityid/3],[south dakota:stateid/2,aberdeen_sd:cityid/3],[iowa:stateid/2,sioux city_ia:cityid/3],[kentucky:stateid/2,black mountain:placeid/2],[pennsylvania:stateid/2,pittsburgh_pa:cityid/3],[south dakota:stateid/2,rapid city_sd:cityid/3],[nevada:stateid/2,colorado:riverid/2],[arizona:stateid/2,glendale_az:cityid/3],[new hampshire:stateid/2,nashua_nh:cityid/3],[kentucky:stateid/2,owensboro_ky:cityid/3],[oregon:stateid/2,columbia:riverid/2],[ohio:stateid/2,hamilton_oh:cityid/3],[washington:stateid/2,spokane_wa:cityid/3],[colorado:stateid/2,yale:mountainid/2],[new york:stateid/2,yonkers_ny:cityid/3],[texas:stateid/2,brownsville_tx:cityid/3],[california:stateid/2,santa rosa_ca:cityid/3],[wisconsin:stateid/2,appleton_wi:cityid/3],[california:stateid/2,hayward_ca:cityid/3],[pennsylvania:stateid/2,reading_pa:cityid/3],[tennessee:stateid/2,mississippi river:placeid/2],[michigan:stateid/2,erie:lakeid/2],[texas:stateid/2,red:riverid/2],[north dakota:stateid/2,little missouri:riverid/2],[california:stateid/2,modesto_ca:cityid/3],[california:stateid/2,daly city_ca:cityid/3],[michigan:stateid/2,st. clair shores_mi:cityid/3],[alabama:stateid/2,tombigbee:riverid/2],[wyoming:stateid/2,cheyenne_wy:cityid/3],[district of columbia:stateid/2,tenleytown:placeid/2],[kentucky:stateid/2,ohio:riverid/2],[california:stateid/2,norwalk_ca:cityid/3],[texas:stateid/2,mcallen_tx:cityid/3],[louisiana:stateid/2,kenner_la:cityid/3],[vermont:stateid/2,lake champlain:placeid/2],[alaska:stateid/2,browne tower:mountainid/2],[nebraska:stateid/2,southeast corner:placeid/2],[montana:stateid/2,clark fork:riverid/2],[texas:stateid/2,abilene_tx:cityid/3],[oklahoma:stateid/2,little river:placeid/2],[ohio:stateid/2,erie:lakeid/2],[wyoming:stateid/2,gannett peak:placeid/2],[texas:stateid/2,rio grande:riverid/2],[tennessee:stateid/2,tennessee:riverid/2],[wisconsin:stateid/2,superior:lakeid/2],[california:stateid/2,bakersfield_ca:cityid/3],[michigan:stateid/2,westland_mi:cityid/3],[virginia:stateid/2,atlantic ocean:placeid/2],[colorado:stateid/2,rio grande:riverid/2],[rhode island:stateid/2,cranston_ri:cityid/3],[colorado:stateid/2,colorado:riverid/2],[texas:stateid/2,pasadena_tx:cityid/3],[new jersey:stateid/2,edison_nj:cityid/3],[south carolina:stateid/2,columbia_sc:cityid/3],[tennessee:stateid/2,clingmans dome:placeid/2],[oklahoma:stateid/2,tulsa_ok:cityid/3],[massachusetts:stateid/2,quincy_ma:cityid/3],[ohio:stateid/2,springfield_oh:cityid/3],[illinois:stateid/2,champaign_il:cityid/3],[new york:stateid/2,atlantic ocean:placeid/2],[michigan:stateid/2,lansing_mi:cityid/3],[florida:stateid/2,fort lauderdale_fl:cityid/3],[arkansas:stateid/2,magazine mountain:placeid/2],[indiana:stateid/2,gary_in:cityid/3],[california:stateid/2,ventura_ca:cityid/3],[ohio:stateid/2,parma_oh:cityid/3],[arkansas:stateid/2,fort smith_ar:cityid/3],[pennsylvania:stateid/2,bethlehem_pa:cityid/3],[arkansas:stateid/2,red:riverid/2],[new york:stateid/2,niagara falls_ny:cityid/3],[oklahoma:stateid/2,canadian:riverid/2],[texas:stateid/2,laredo_tx:cityid/3],[south dakota:stateid/2,watertown_sd:cityid/3],[colorado:stateid/2,smoky hill:riverid/2],[district of columbia:stateid/2,potomac river:placeid/2],[illinois:stateid/2,ohio:riverid/2],[texas:stateid/2,plano_tx:cityid/3],[new york:stateid/2,new rochelle_ny:cityid/3],[nebraska:stateid/2,grand island_ne:cityid/3],[district of columbia:stateid/2,tenleytown_dc:cityid/3],[california:stateid/2,oceanside_ca:cityid/3],[kentucky:stateid/2,mississippi river:placeid/2],[nevada:stateid/2,colorado river:placeid/2],[massachusetts:stateid/2,lowell_ma:cityid/3],[arizona:stateid/2,tempe_az:cityid/3],[new york:stateid/2,cheektowaga_ny:cityid/3],[kentucky:stateid/2,lexington_ky:cityid/3],[california:stateid/2,carson_ca:cityid/3],[michigan:stateid/2,michigan:lakeid/2],[louisiana:stateid/2,mississippi:riverid/2],[new mexico:stateid/2,red:riverid/2],[arizona:stateid/2,gila:riverid/2],[illinois:stateid/2,charles mound:placeid/2],[iowa:stateid/2,ocheyedan mound:placeid/2],[california:stateid/2,williamson:mountainid/2],[pennsylvania:stateid/2,penn hills_pa:cityid/3],[oklahoma:stateid/2,red:riverid/2],[california:stateid/2,el monte_ca:cityid/3],[connecticut:stateid/2,west hartford_ct:cityid/3],[idaho:stateid/2,boise_id:cityid/3],[colorado:stateid/2,denver_co:cityid/3],[iowa:stateid/2,davenport_ia:cityid/3],[alaska:stateid/2,st. elias:mountainid/2],[connecticut:stateid/2,long island sound:placeid/2],[california:stateid/2,orange_ca:cityid/3],[washington:stateid/2,rainier:mountainid/2],[texas:stateid/2,gulf of mexico:placeid/2],[utah:stateid/2,great salt lake:lakeid/2],[ohio:stateid/2,dayton_oh:cityid/3],[south dakota:stateid/2,little missouri:riverid/2],[washington:stateid/2,tacoma_wa:cityid/3],[washington:stateid/2,snake:riverid/2],[oklahoma:stateid/2,oklahoma city_ok:cityid/3],[wisconsin:stateid/2,mississippi:riverid/2],[utah:stateid/2,beaver dam creek:placeid/2],[minnesota:stateid/2,rochester_mn:cityid/3],[north dakota:stateid/2,white butte:placeid/2],[florida:stateid/2,west palm beach_fl:cityid/3],[rhode island:stateid/2,atlantic ocean:placeid/2],[arizona:stateid/2,tucson_az:cityid/3],[louisiana:stateid/2,pontchartrain:lakeid/2],[indiana:stateid/2,wabash:riverid/2],[idaho:stateid/2,borah peak:placeid/2],[california:stateid/2,scotts valley_ca:cityid/3],[north carolina:stateid/2,roanoke:riverid/2],[washington:stateid/2,pacific ocean:placeid/2],[montana:stateid/2,flathead:lakeid/2],[michigan:stateid/2,taylor_mi:cityid/3],[illinois:stateid/2,evanston_il:cityid/3],[california:stateid/2,san bernardino_ca:cityid/3],[kansas:stateid/2,kansas city_ks:cityid/3],[pennsylvania:stateid/2,allentown_pa:cityid/3],[illinois:stateid/2,rockford_il:cityid/3],[district of columbia:stateid/2,duval circle_dc:cityid/3],[washington:stateid/2,bellevue_wa:cityid/3],[alaska:stateid/2,mckinley:mountainid/2],[vermont:stateid/2,bennington_vt:cityid/3],[maryland:stateid/2,dundalk_md:cityid/3],[maryland:stateid/2,potomac:riverid/2],[colorado:stateid/2,evans:mountainid/2],[texas:stateid/2,washita:riverid/2],[connecticut:stateid/2,stamford_ct:cityid/3],[montana:stateid/2,billings_mt:cityid/3],[wisconsin:stateid/2,michigan:lakeid/2],[arizona:stateid/2,humphreys peak:placeid/2],[california:stateid/2,sacramento_ca:cityid/3],[illinois:stateid/2,decatur_il:cityid/3],[connecticut:stateid/2,meriden_ct:cityid/3],[california:stateid/2,torrance_ca:cityid/3],[alaska:stateid/2,wrangell:mountainid/2],[texas:stateid/2,el paso_tx:cityid/3],[colorado:stateid/2,republican:riverid/2],[alaska:stateid/2,east buttress:mountainid/2],[pennsylvania:stateid/2,mount davis:placeid/2],[wisconsin:stateid/2,racine_wi:cityid/3],[idaho:stateid/2,snake river:placeid/2],[kentucky:stateid/2,covington_ky:cityid/3],[tennessee:stateid/2,memphis_tn:cityid/3],[delaware:stateid/2,delaware:riverid/2],[texas:stateid/2,port arthur_tx:cityid/3],[colorado:stateid/2,quandary:mountainid/2],[minnesota:stateid/2,lake of the woods:lakeid/2],[arkansas:stateid/2,ouachita river:placeid/2],[north dakota:stateid/2,cheyenne:riverid/2],[texas:stateid/2,amarillo_tx:cityid/3],[california:stateid/2,whitney:mountainid/2],[texas:stateid/2,lubbock_tx:cityid/3],[washington:stateid/2,olympia_wa:cityid/3],[massachusetts:stateid/2,worcester_ma:cityid/3],[south dakota:stateid/2,sioux falls_sd:cityid/3],[wyoming:stateid/2,casper_wy:cityid/3],[california:stateid/2,long beach_ca:cityid/3],[michigan:stateid/2,huron:lakeid/2],[florida:stateid/2,st. petersburg_fl:cityid/3],[utah:stateid/2,salt lake city_ut:cityid/3],[alaska:stateid/2,anchorage_ak:cityid/3],[indiana:stateid/2,ohio river:placeid/2],[california:stateid/2,salton sea:lakeid/2],[new york:stateid/2,mount marcy:placeid/2],[alaska:stateid/2,naknek:lakeid/2],[new hampshire:stateid/2,manchester_nh:cityid/3],[wyoming:stateid/2,laramie_wy:cityid/3],[alaska:stateid/2,sitka_ak:cityid/3],[wisconsin:stateid/2,lake michigan:placeid/2],[delaware:stateid/2,centerville:placeid/2],[texas:stateid/2,san antonio_tx:cityid/3],[california:stateid/2,whittier_ca:cityid/3],[south dakota:stateid/2,harney peak:placeid/2],[oklahoma:stateid/2,washita:riverid/2],[texas:stateid/2,corpus christi_tx:cityid/3],[delaware:stateid/2,atlantic ocean:placeid/2],[michigan:stateid/2,redford_mi:cityid/3],[ohio:stateid/2,cleveland_oh:cityid/3],[kentucky:stateid/2,tennessee:riverid/2],[maine:stateid/2,mount katahdin:placeid/2],[new jersey:stateid/2,paterson_nj:cityid/3],[vermont:stateid/2,rutland_vt:cityid/3],[wisconsin:stateid/2,rock:riverid/2],[colorado:stateid/2,green:riverid/2],[massachusetts:stateid/2,waltham_ma:cityid/3],[new hampshire:stateid/2,atlantic ocean:placeid/2],[ohio:stateid/2,columbus_oh:cityid/3],[idaho:stateid/2,snake:riverid/2],[hawaii:stateid/2,ewa_hi:cityid/3],[missouri:stateid/2,st. louis_mo:cityid/3],[colorado:stateid/2,south platte:riverid/2],[michigan:stateid/2,pearl:riverid/2],[minnesota:stateid/2,bloomington_mn:cityid/3],[michigan:stateid/2,dearborn_mi:cityid/3],[texas:stateid/2,garland_tx:cityid/3],[new mexico:stateid/2,san juan:riverid/2],[california:stateid/2,burbank_ca:cityid/3],[california:stateid/2,oxnard_ca:cityid/3],[michigan:stateid/2,st. clair:lakeid/2],[north dakota:stateid/2,yellowstone:riverid/2],[utah:stateid/2,provo_ut:cityid/3],[virginia:stateid/2,virginia beach_va:cityid/3],[arkansas:stateid/2,north little rock_ar:cityid/3],[texas:stateid/2,arlington_tx:cityid/3],[massachusetts:stateid/2,somerville_ma:cityid/3],[california:stateid/2,compton_ca:cityid/3],[california:stateid/2,redondo beach_ca:cityid/3],[wisconsin:stateid/2,green bay_wi:cityid/3],[new hampshire:stateid/2,connecticut:riverid/2],[pennsylvania:stateid/2,abingdon_pa:cityid/3],[texas:stateid/2,longview_tx:cityid/3],[utah:stateid/2,green:riverid/2],[new jersey:stateid/2,middletown_nj:cityid/3],[louisiana:stateid/2,red:riverid/2],[new mexico:stateid/2,santa fe_nm:cityid/3],[north carolina:stateid/2,charlotte_nc:cityid/3],[iowa:stateid/2,mississippi:riverid/2],[florida:stateid/2,largo_fl:cityid/3],[mississippi:stateid/2,jackson_ms:cityid/3],[texas:stateid/2,tyler_tx:cityid/3],[california:stateid/2,los angeles_ca:cityid/3],[michigan:stateid/2,flint_mi:cityid/3],[arkansas:stateid/2,arkansas:riverid/2],[colorado:stateid/2,arkansas:riverid/2],[north dakota:stateid/2,dakota:riverid/2],[rhode island:stateid/2,warwick_ri:cityid/3],[california:stateid/2,santa barbara_ca:cityid/3],[missouri:stateid/2,jefferson city_mo:cityid/3],[michigan:stateid/2,mount curwood:placeid/2],[oregon:stateid/2,springfield_or:cityid/3],[minnesota:stateid/2,lake superior:placeid/2],[california:stateid/2,santa clara_ca:cityid/3],[colorado:stateid/2,wilson:mountainid/2],[alabama:stateid/2,montgomery_al:cityid/3],[michigan:stateid/2,ann arbor_mi:cityid/3],[illinois:stateid/2,oak lawn_il:cityid/3],[pennsylvania:stateid/2,scranton_pa:cityid/3],[vermont:stateid/2,montpelier_vt:cityid/3],[new jersey:stateid/2,camden_nj:cityid/3],[minnesota:stateid/2,mississippi:riverid/2],[alabama:stateid/2,mobile_al:cityid/3],[louisiana:stateid/2,new orleans_la:cityid/3],[minnesota:stateid/2,st. paul_mn:cityid/3],[pennsylvania:stateid/2,lower merion_pa:cityid/3],[alaska:stateid/2,alverstone:mountainid/2],[missouri:stateid/2,white:riverid/2],[new jersey:stateid/2,newark_nj:cityid/3],[california:stateid/2,colorado:riverid/2],[west virginia:stateid/2,spruce knob:placeid/2],[michigan:stateid/2,royal oak_mi:cityid/3],[alaska:stateid/2,fairweather:mountainid/2],[colorado:stateid/2,colorado springs_co:cityid/3],[colorado:stateid/2,crestone:mountainid/2],[west virginia:stateid/2,huntington_wv:cityid/3],[florida:stateid/2,hollywood_fl:cityid/3],[california:stateid/2,south gate_ca:cityid/3],[new jersey:stateid/2,high point:placeid/2],[north dakota:stateid/2,grand forks_nd:cityid/3],[maryland:stateid/2,backbone mountain:placeid/2],[oklahoma:stateid/2,arkansas:riverid/2],[montana:stateid/2,missoula_mt:cityid/3],[california:stateid/2,riverside_ca:cityid/3],[maine:stateid/2,atlantic ocean:placeid/2],[virginia:stateid/2,richmond_va:cityid/3],[louisiana:stateid/2,shreveport_la:cityid/3],[missouri:stateid/2,taum sauk mountain:placeid/2],[colorado:stateid/2,aurora_co:cityid/3],[colorado:stateid/2,lakewood_co:cityid/3],[arkansas:stateid/2,st. francis:riverid/2],[connecticut:stateid/2,danbury_ct:cityid/3],[kentucky:stateid/2,frankfort_ky:cityid/3],[georgia:stateid/2,brasstown bald:placeid/2],[california:stateid/2,san mateo_ca:cityid/3],[iowa:stateid/2,missouri:riverid/2],[oregon:stateid/2,portland_or:cityid/3],[illinois:stateid/2,springfield_il:cityid/3],[pennsylvania:stateid/2,ohio:riverid/2],[mississippi:stateid/2,tombigbee:riverid/2],[north dakota:stateid/2,red river:placeid/2],[indiana:stateid/2,franklin township:placeid/2],[michigan:stateid/2,farmington hills_mi:cityid/3],[california:stateid/2,mountain view_ca:cityid/3],[oklahoma:stateid/2,lawton_ok:cityid/3],[michigan:stateid/2,superior:lakeid/2],[alaska:stateid/2,hunter:mountainid/2],[indiana:stateid/2,muncie_in:cityid/3],[maryland:stateid/2,baltimore_md:cityid/3],[california:stateid/2,downey_ca:cityid/3],[massachusetts:stateid/2,boston_ma:cityid/3],[michigan:stateid/2,troy_mi:cityid/3],[new york:stateid/2,hudson:riverid/2],[new york:stateid/2,allegheny:riverid/2],[virginia:stateid/2,newport news_va:cityid/3],[oklahoma:stateid/2,cimarron:riverid/2],[california:stateid/2,inglewood_ca:cityid/3],[florida:stateid/2,pensacola_fl:cityid/3],[massachusetts:stateid/2,framingham_ma:cityid/3],[new hampshire:stateid/2,portsmouth_nh:cityid/3],[maine:stateid/2,bangor_me:cityid/3],[oregon:stateid/2,eugene_or:cityid/3],[wyoming:stateid/2,niobrara:riverid/2],[ohio:stateid/2,akron_oh:cityid/3],[north carolina:stateid/2,raleigh_nc:cityid/3],[pennsylvania:stateid/2,altoona_pa:cityid/3],[alabama:stateid/2,tuscaloosa_al:cityid/3],[tennessee:stateid/2,mississippi:riverid/2],[new york:stateid/2,buffalo_ny:cityid/3],[west virginia:stateid/2,potomac:riverid/2],[california:stateid/2,death valley:placeid/2],[alabama:stateid/2,birmingham_al:cityid/3],[colorado:stateid/2,shavano:mountainid/2],[nebraska:stateid/2,omaha_ne:cityid/3],[south dakota:stateid/2,big stone lake:placeid/2],[virginia:stateid/2,roanoke:riverid/2],[wyoming:stateid/2,bighorn:riverid/2],[minnesota:stateid/2,eagle mountain:placeid/2],[kansas:stateid/2,arkansas:riverid/2],[wisconsin:stateid/2,kenosha_wi:cityid/3],[arizona:stateid/2,phoenix_az:cityid/3],[arkansas:stateid/2,ouachita:riverid/2],[california:stateid/2,berkeley_ca:cityid/3],[alaska:stateid/2,pacific ocean:placeid/2],[idaho:stateid/2,clark fork:riverid/2],[maryland:stateid/2,atlantic ocean:placeid/2],[alabama:stateid/2,huntsville_al:cityid/3],[indiana:stateid/2,south bend_in:cityid/3],[arkansas:stateid/2,little rock_ar:cityid/3],[michigan:stateid/2,waterford_mi:cityid/3],[missouri:stateid/2,columbia_mo:cityid/3],[alaska:stateid/2,iliamna:lakeid/2],[new hampshire:stateid/2,concord_nh:cityid/3],[arizona:stateid/2,mesa_az:cityid/3],[new york:stateid/2,syracuse_ny:cityid/3],[ohio:stateid/2,youngstown_oh:cityid/3],[colorado:stateid/2,bianca:mountainid/2],[utah:stateid/2,colorado:riverid/2],[nebraska:stateid/2,johnson township:placeid/2],[new york:stateid/2,champlain:lakeid/2],[kansas:stateid/2,mount sunflower:placeid/2],[new york:stateid/2,utica_ny:cityid/3],[michigan:stateid/2,pontiac_mi:cityid/3],[alaska:stateid/2,becharof:lakeid/2],[connecticut:stateid/2,waterbury_ct:cityid/3],[colorado:stateid/2,elbert:mountainid/2],[district of columbia:stateid/2,georgetown_dc:cityid/3],[tennessee:stateid/2,nashville_tn:cityid/3],[iowa:stateid/2,cedar rapids_ia:cityid/3],[new mexico:stateid/2,red bluff reservoir:placeid/2],[colorado:stateid/2,torreys:mountainid/2],[new jersey:stateid/2,woodbridge_nj:cityid/3],[south carolina:stateid/2,wateree catawba:riverid/2],[pennsylvania:stateid/2,upper darby_pa:cityid/3],[new york:stateid/2,irondequoit_ny:cityid/3],[colorado:stateid/2,lincoln:mountainid/2],[texas:stateid/2,canadian:riverid/2],[colorado:stateid/2,kit carson:mountainid/2],[mississippi:stateid/2,mississippi:riverid/2],[indiana:stateid/2,evansville_in:cityid/3],[colorado:stateid/2,canadian:riverid/2],[new hampshire:stateid/2,mount washington:placeid/2],[nevada:stateid/2,carson city_nv:cityid/3],[wisconsin:stateid/2,milwaukee_wi:cityid/3],[illinois:stateid/2,michigan:lakeid/2],[virginia:stateid/2,potomac:riverid/2],[new mexico:stateid/2,albuquerque_nm:cityid/3],[nebraska:stateid/2,north platte:riverid/2],[wyoming:stateid/2,green:riverid/2],[california:stateid/2,garden grove_ca:cityid/3],[iowa:stateid/2,mississippi river:placeid/2],[massachusetts:stateid/2,newton_ma:cityid/3],[pennsylvania:stateid/2,delaware:riverid/2],[michigan:stateid/2,dearborn heights_mi:cityid/3],[ohio:stateid/2,campbell hill:placeid/2],[new jersey:stateid/2,bayonne_nj:cityid/3],[california:stateid/2,mount whitney:placeid/2],[new jersey:stateid/2,trenton_nj:cityid/3],[new mexico:stateid/2,pecos:riverid/2],[colorado:stateid/2,harvard:mountainid/2],[missouri:stateid/2,independence_mo:cityid/3],[virginia:stateid/2,chesapeake_va:cityid/3],[kansas:stateid/2,wichita_ks:cityid/3],[west virginia:stateid/2,parkersburg_wv:cityid/3],[louisiana:stateid/2,baton rouge_la:cityid/3],[michigan:stateid/2,clinton_mi:cityid/3],[iowa:stateid/2,des moines_ia:cityid/3],[virginia:stateid/2,arlington_va:cityid/3],[california:stateid/2,white:mountainid/2],[missouri:stateid/2,mississippi:riverid/2],[new york:stateid/2,erie:lakeid/2],[oklahoma:stateid/2,neosho:riverid/2],[minnesota:stateid/2,duluth_mn:cityid/3],[montana:stateid/2,bighorn:riverid/2],[florida:stateid/2,tampa_fl:cityid/3],[wyoming:stateid/2,yellowstone:riverid/2],[utah:stateid/2,west valley_ut:cityid/3],[alaska:stateid/2,fairbanks_ak:cityid/3],[wyoming:stateid/2,snake:riverid/2],[colorado:stateid/2,mount elbert:placeid/2],[south dakota:stateid/2,dakota:riverid/2],[minnesota:stateid/2,mille lacs:lakeid/2],[pennsylvania:stateid/2,bristol township_pa:cityid/3],[delaware:stateid/2,wilmington_de:cityid/3],[new mexico:stateid/2,gila:riverid/2],[california:stateid/2,fairfield_ca:cityid/3],[alaska:stateid/2,hubbard:mountainid/2],[california:stateid/2,tahoe:lakeid/2],[mississippi:stateid/2,meridian_ms:cityid/3],[montana:stateid/2,missouri:riverid/2],[alaska:stateid/2,kennedy:mountainid/2],[indiana:stateid/2,indianapolis_in:cityid/3],[idaho:stateid/2,pocatello_id:cityid/3],[new york:stateid/2,delaware:riverid/2],[hawaii:stateid/2,pacific ocean:placeid/2],[california:stateid/2,north palisade:mountainid/2],[connecticut:stateid/2,bridgeport_ct:cityid/3],[california:stateid/2,fresno_ca:cityid/3],[wyoming:stateid/2,powder:riverid/2],[colorado:stateid/2,grays:mountainid/2],[texas:stateid/2,mesquite_tx:cityid/3],[new jersey:stateid/2,atlantic ocean:placeid/2],[california:stateid/2,westminster_ca:cityid/3],[alaska:stateid/2,south buttress:mountainid/2],[indiana:stateid/2,anderson_in:cityid/3],[michigan:stateid/2,warren_mi:cityid/3],[massachusetts:stateid/2,lawrence_ma:cityid/3],[hawaii:stateid/2,mauna kea:placeid/2],[michigan:stateid/2,sterling heights_mi:cityid/3],[delaware:stateid/2,newark_de:cityid/3],[louisiana:stateid/2,lake charles_la:cityid/3],[rhode island:stateid/2,jerimoth hill:placeid/2],[north carolina:stateid/2,mount mitchell:placeid/2],[south carolina:stateid/2,sassafras mountain:placeid/2],[florida:stateid/2,miami_fl:cityid/3],[kansas:stateid/2,smoky hill:riverid/2],[california:stateid/2,anaheim_ca:cityid/3],[michigan:stateid/2,kalamazoo_mi:cityid/3],[texas:stateid/2,guadalupe peak:placeid/2],[california:stateid/2,simi valley_ca:cityid/3],[illinois:stateid/2,cicero_il:cityid/3],[illinois:stateid/2,skokie_il:cityid/3],[texas:stateid/2,irving_tx:cityid/3],[texas:stateid/2,waco_tx:cityid/3],[new york:stateid/2,levittown_ny:cityid/3],[maryland:stateid/2,annapolis_md:cityid/3],[colorado:stateid/2,arkansas river:placeid/2],[washington:stateid/2,columbia:riverid/2],[alaska:stateid/2,mount mckinley:placeid/2],[connecticut:stateid/2,bristol_ct:cityid/3],[iowa:stateid/2,waterloo_ia:cityid/3],[massachusetts:stateid/2,brockton_ma:cityid/3],[illinois:stateid/2,chicago_il:cityid/3],[colorado:stateid/2,fort collins_co:cityid/3],[california:stateid/2,el cajon_ca:cityid/3],[california:stateid/2,shasta:mountainid/2],[north dakota:stateid/2,minot_nd:cityid/3],[florida:stateid/2,atlantic ocean:placeid/2],[new mexico:stateid/2,canadian:riverid/2],[south carolina:stateid/2,charleston_sc:cityid/3],[minnesota:stateid/2,superior:lakeid/2],[new jersey:stateid/2,hudson:riverid/2],[new mexico:stateid/2,wheeler peak:placeid/2],[florida:stateid/2,gainesville_fl:cityid/3],[new jersey:stateid/2,cherry hill_nj:cityid/3],[missouri:stateid/2,kansas city_mo:cityid/3],[colorado:stateid/2,crestone needle:mountainid/2],[kansas:stateid/2,verdigris river:placeid/2],[west virginia:stateid/2,ohio:riverid/2],[vermont:stateid/2,champlain:lakeid/2],[ohio:stateid/2,toledo_oh:cityid/3],[vermont:stateid/2,essex_vt:cityid/3],[alaska:stateid/2,vancouver:mountainid/2],[massachusetts:stateid/2,new bedford_ma:cityid/3],[south carolina:stateid/2,north charleston_sc:cityid/3],[georgia:stateid/2,atlantic ocean:placeid/2],[north dakota:stateid/2,bismarck_nd:cityid/3],[pennsylvania:stateid/2,delaware river:placeid/2],[hawaii:stateid/2,honolulu_hi:cityid/3],[wisconsin:stateid/2,timms hill:placeid/2],[california:stateid/2,san jose_ca:cityid/3],[delaware:stateid/2,brookside_de:cityid/3],[south carolina:stateid/2,atlantic ocean:placeid/2],[nebraska:stateid/2,republican:riverid/2],[california:stateid/2,fullerton_ca:cityid/3],[michigan:stateid/2,detroit_mi:cityid/3],[georgia:stateid/2,chattahoochee:riverid/2],[california:stateid/2,alameda_ca:cityid/3],[kentucky:stateid/2,mississippi:riverid/2],[california:stateid/2,santa ana_ca:cityid/3],[colorado:stateid/2,san juan:riverid/2],[texas:stateid/2,pecos:riverid/2],[illinois:stateid/2,wabash:riverid/2],[delaware:stateid/2,dover_de:cityid/3],[illinois:stateid/2,elgin_il:cityid/3],[ohio:stateid/2,lakewood_oh:cityid/3],[alabama:stateid/2,cheaha mountain:placeid/2],[montana:stateid/2,little missouri:riverid/2],[florida:stateid/2,clearwater_fl:cityid/3],[texas:stateid/2,dallas_tx:cityid/3],[ohio:stateid/2,ohio river:placeid/2],[oregon:stateid/2,pacific ocean:placeid/2],[texas:stateid/2,richardson_tx:cityid/3],[colorado:stateid/2,uncompahgre:mountainid/2],[texas:stateid/2,beaumont_tx:cityid/3],[washington:stateid/2,mount rainier:placeid/2],[montana:stateid/2,butte_mt:cityid/3],[florida:stateid/2,kendall_fl:cityid/3],[pennsylvania:stateid/2,erie:lakeid/2],[ohio:stateid/2,ohio:riverid/2],[new york:stateid/2,schenectady_ny:cityid/3],[south carolina:stateid/2,greenville_sc:cityid/3],[hawaii:stateid/2,koolaupoko_hi:cityid/3],[massachusetts:stateid/2,mount greylock:placeid/2],[texas:stateid/2,austin_tx:cityid/3],[california:stateid/2,vallejo_ca:cityid/3],[colorado:stateid/2,longs:mountainid/2],[massachusetts:stateid/2,atlantic ocean:placeid/2],[mississippi:stateid/2,gulf of mexico:placeid/2],[virginia:stateid/2,hampton_va:cityid/3],[oregon:stateid/2,salem_or:cityid/3],[nebraska:stateid/2,niobrara:riverid/2],[michigan:stateid/2,grand rapids_mi:cityid/3],[indiana:stateid/2,fort wayne_in:cityid/3],[washington:stateid/2,seattle_wa:cityid/3],[illinois:stateid/2,rock:riverid/2],[california:stateid/2,escondido_ca:cityid/3],[idaho:stateid/2,lewiston_id:cityid/3],[north carolina:stateid/2,winston-salem_nc:cityid/3],[california:stateid/2,west covina_ca:cityid/3],[california:stateid/2,sunnyvale_ca:cityid/3],[wyoming:stateid/2,belle fourche river:placeid/2],[missouri:stateid/2,st. joseph_mo:cityid/3],[pennsylvania:stateid/2,philadelphia_pa:cityid/3],[nevada:stateid/2,sunrise manor_nv:cityid/3],[oklahoma:stateid/2,norman_ok:cityid/3],[kansas:stateid/2,neosho:riverid/2],[massachusetts:stateid/2,fall river_ma:cityid/3],[alaska:stateid/2,teshekpuk:lakeid/2],[virginia:stateid/2,portsmouth_va:cityid/3],[indiana:stateid/2,michigan:lakeid/2],[texas:stateid/2,grand prairie_tx:cityid/3],[new jersey:stateid/2,east orange_nj:cityid/3],[hawaii:stateid/2,wahiawa_hi:cityid/3],[ohio:stateid/2,canton_oh:cityid/3],[massachusetts:stateid/2,connecticut:riverid/2],[south dakota:stateid/2,missouri:riverid/2],[north carolina:stateid/2,wateree catawba:riverid/2],[georgia:stateid/2,atlanta_ga:cityid/3],[kansas:stateid/2,republican:riverid/2],[maine:stateid/2,portland_me:cityid/3],[new york:stateid/2,rochester_ny:cityid/3],[nevada:stateid/2,boundary peak:placeid/2],[california:stateid/2,ontario_ca:cityid/3],[new york:stateid/2,ontario:lakeid/2],[alaska:stateid/2,churchill:mountainid/2],[montana:stateid/2,great falls_mt:cityid/3],[texas:stateid/2,wichita falls_tx:cityid/3],[north carolina:stateid/2,fayetteville_nc:cityid/3],[north dakota:stateid/2,fargo_nd:cityid/3],[louisiana:stateid/2,pearl:riverid/2],[connecticut:stateid/2,hartford_ct:cityid/3],[wyoming:stateid/2,cheyenne:riverid/2],[california:stateid/2,irvine_ca:cityid/3],[utah:stateid/2,ogden_ut:cityid/3],[texas:stateid/2,midland_tx:cityid/3],[alaska:stateid/2,bear:mountainid/2],[north carolina:stateid/2,greensboro_nc:cityid/3],[new york:stateid/2,albany_ny:cityid/3],[texas:stateid/2,san angelo_tx:cityid/3],[oregon:stateid/2,snake:riverid/2],[michigan:stateid/2,saginaw_mi:cityid/3],[california:stateid/2,alhambra_ca:cityid/3],[florida:stateid/2,chattahoochee:riverid/2],[louisiana:stateid/2,new orleans:placeid/2],[kentucky:stateid/2,louisville_ky:cityid/3],[california:stateid/2,chula vista_ca:cityid/3]}:{[stateid/2,riverid/2],[stateid/2,mountainid/2],[stateid/2,cityid/3],[stateid/2,lakeid/2],[stateid/2,placeid/2]}[1] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),state(B),const(C,cityid(kalamazoo,_)),loc(C,B)))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:342: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:343: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:344: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[maroon:mountainid/2,usa:countryid/2],[ohio:riverid/2,west virginia:stateid/2],[pacific ocean:placeid/2,oregon:stateid/2],[irvine_ca:cityid/3,california:stateid/2],[mount greylock:placeid/2,massachusetts:stateid/2],[butte_mt:cityid/3,usa:countryid/2],[silver spring_md:cityid/3,maryland:stateid/2],[cincinnati_oh:cityid/3,usa:countryid/2],[mount sunflower:placeid/2,usa:countryid/2],[columbus_ga:cityid/3,usa:countryid/2],[wabash:riverid/2,indiana:stateid/2],[mcallen_tx:cityid/3,texas:stateid/2],[phoenix_az:cityid/3,arizona:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[riverside_ca:cityid/3,california:stateid/2],[aurora_co:cityid/3,usa:countryid/2],[gulf of mexico:placeid/2,texas:stateid/2],[red river:placeid/2,north dakota:stateid/2],[dayton_oh:cityid/3,ohio:stateid/2],[west valley_ut:cityid/3,usa:countryid/2],[shreveport_la:cityid/3,usa:countryid/2],[portland_me:cityid/3,maine:stateid/2],[tennessee:riverid/2,usa:countryid/2],[owensboro_ky:cityid/3,usa:countryid/2],[bristol_ct:cityid/3,connecticut:stateid/2],[niobrara:riverid/2,nebraska:stateid/2],[koolaupoko_hi:cityid/3,hawaii:stateid/2],[bayonne_nj:cityid/3,new jersey:stateid/2],[atlantic ocean:placeid/2,rhode island:stateid/2],[superior:lakeid/2,usa:countryid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[new york:stateid/2,usa:countryid/2],[belle fourche river:placeid/2,wyoming:stateid/2],[east orange_nj:cityid/3,usa:countryid/2],[st. joseph_mo:cityid/3,missouri:stateid/2],[green:riverid/2,wyoming:stateid/2],[lubbock_tx:cityid/3,usa:countryid/2],[terre haute_in:cityid/3,usa:countryid/2],[waterbury_ct:cityid/3,connecticut:stateid/2],[tucson_az:cityid/3,arizona:stateid/2],[reading_pa:cityid/3,usa:countryid/2],[concord_ca:cityid/3,california:stateid/2],[portland_me:cityid/3,usa:countryid/2],[tyler_tx:cityid/3,texas:stateid/2],[red:lakeid/2,usa:countryid/2],[lynchburg_va:cityid/3,virginia:stateid/2],[st. louis_mo:cityid/3,usa:countryid/2],[boston_ma:cityid/3,usa:countryid/2],[yale:mountainid/2,colorado:stateid/2],[redford_mi:cityid/3,michigan:stateid/2],[mount rogers:placeid/2,usa:countryid/2],[sioux city_ia:cityid/3,iowa:stateid/2],[kendall_fl:cityid/3,usa:countryid/2],[simi valley_ca:cityid/3,california:stateid/2],[colorado:riverid/2,nevada:stateid/2],[denver_co:cityid/3,colorado:stateid/2],[east los angeles_ca:cityid/3,usa:countryid/2],[memphis_tn:cityid/3,usa:countryid/2],[akron_oh:cityid/3,ohio:stateid/2],[vallejo_ca:cityid/3,usa:countryid/2],[cheaha mountain:placeid/2,usa:countryid/2],[mount mansfield:placeid/2,usa:countryid/2],[brasstown bald:placeid/2,georgia:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[walton county:placeid/2,florida:stateid/2],[new hampshire:stateid/2,usa:countryid/2],[camden_nj:cityid/3,usa:countryid/2],[norwalk_ct:cityid/3,connecticut:stateid/2],[boise_id:cityid/3,usa:countryid/2],[san antonio_tx:cityid/3,texas:stateid/2],[penn hills_pa:cityid/3,pennsylvania:stateid/2],[fort smith_ar:cityid/3,usa:countryid/2],[fall river_ma:cityid/3,massachusetts:stateid/2],[buena park_ca:cityid/3,california:stateid/2],[eagle mountain:placeid/2,usa:countryid/2],[winston-salem_nc:cityid/3,usa:countryid/2],[newport beach_ca:cityid/3,usa:countryid/2],[taylor_mi:cityid/3,michigan:stateid/2],[framingham_ma:cityid/3,massachusetts:stateid/2],[spokane_wa:cityid/3,usa:countryid/2],[charles mound:placeid/2,usa:countryid/2],[mount sunflower:placeid/2,kansas:stateid/2],[newark_de:cityid/3,delaware:stateid/2],[royal oak_mi:cityid/3,michigan:stateid/2],[high point:placeid/2,usa:countryid/2],[roswell_nm:cityid/3,new mexico:stateid/2],[sunrise manor_nv:cityid/3,nevada:stateid/2],[medford_ma:cityid/3,massachusetts:stateid/2],[alameda_ca:cityid/3,california:stateid/2],[grand prairie_tx:cityid/3,texas:stateid/2],[magazine mountain:placeid/2,arkansas:stateid/2],[south buttress:mountainid/2,alaska:stateid/2],[ocheyedan mound:placeid/2,usa:countryid/2],[san juan:riverid/2,usa:countryid/2],[ontario_ca:cityid/3,usa:countryid/2],[salinas_ca:cityid/3,california:stateid/2],[buffalo_ny:cityid/3,new york:stateid/2],[fairbanks_ak:cityid/3,alaska:stateid/2],[little missouri:riverid/2,south dakota:stateid/2],[mount curwood:placeid/2,michigan:stateid/2],[grand island_ne:cityid/3,nebraska:stateid/2],[fairfield_ca:cityid/3,california:stateid/2],[pine bluff_ar:cityid/3,arkansas:stateid/2],[tallahassee_fl:cityid/3,florida:stateid/2],[rio grande:riverid/2,usa:countryid/2],[jackson_ms:cityid/3,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[bennington_vt:cityid/3,vermont:stateid/2],[elyria_oh:cityid/3,ohio:stateid/2],[charlotte_nc:cityid/3,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[wrangell:mountainid/2,usa:countryid/2],[verdigris river:placeid/2,kansas:stateid/2],[portsmouth_nh:cityid/3,usa:countryid/2],[concord_nh:cityid/3,usa:countryid/2],[beaumont_tx:cityid/3,texas:stateid/2],[gila:riverid/2,arizona:stateid/2],[appleton_wi:cityid/3,usa:countryid/2],[dallas_tx:cityid/3,usa:countryid/2],[abilene_tx:cityid/3,usa:countryid/2],[teshekpuk:lakeid/2,alaska:stateid/2],[green:riverid/2,utah:stateid/2],[white:mountainid/2,california:stateid/2],[altoona_pa:cityid/3,pennsylvania:stateid/2],[mount hood:placeid/2,oregon:stateid/2],[south gate_ca:cityid/3,california:stateid/2],[arkansas:riverid/2,usa:countryid/2],[juneau_ak:cityid/3,alaska:stateid/2],[huron:lakeid/2,usa:countryid/2],[peoria_il:cityid/3,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[lynchburg_va:cityid/3,usa:countryid/2],[sparks_nv:cityid/3,usa:countryid/2],[missouri:stateid/2,usa:countryid/2],[fremont_ca:cityid/3,usa:countryid/2],[west covina_ca:cityid/3,usa:countryid/2],[boulder_co:cityid/3,usa:countryid/2],[grand island_ne:cityid/3,usa:countryid/2],[greenville_sc:cityid/3,south carolina:stateid/2],[timms hill:placeid/2,usa:countryid/2],[oakland_ca:cityid/3,california:stateid/2],[michigan:lakeid/2,wisconsin:stateid/2],[charleston_wv:cityid/3,west virginia:stateid/2],[portland_or:cityid/3,oregon:stateid/2],[billings_mt:cityid/3,montana:stateid/2],[gannett peak:placeid/2,usa:countryid/2],[hampton_va:cityid/3,virginia:stateid/2],[lakewood_ca:cityid/3,california:stateid/2],[white butte:placeid/2,north dakota:stateid/2],[bridgeport_ct:cityid/3,usa:countryid/2],[verdigris river:placeid/2,usa:countryid/2],[longview_tx:cityid/3,texas:stateid/2],[torrance_ca:cityid/3,usa:countryid/2],[potomac:riverid/2,maryland:stateid/2],[lake superior:placeid/2,minnesota:stateid/2],[charleston_sc:cityid/3,usa:countryid/2],[long beach_ca:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,florida:stateid/2],[upper darby_pa:cityid/3,usa:countryid/2],[phoenix_az:cityid/3,usa:countryid/2],[kenosha_wi:cityid/3,wisconsin:stateid/2],[lansing_mi:cityid/3,usa:countryid/2],[parma_oh:cityid/3,usa:countryid/2],[newark_nj:cityid/3,usa:countryid/2],[fargo_nd:cityid/3,usa:countryid/2],[fort wayne_in:cityid/3,indiana:stateid/2],[kings peak:placeid/2,utah:stateid/2],[okeechobee:lakeid/2,florida:stateid/2],[burbank_ca:cityid/3,usa:countryid/2],[koolaupoko_hi:cityid/3,usa:countryid/2],[kendall_fl:cityid/3,florida:stateid/2],[watertown_sd:cityid/3,south dakota:stateid/2],[winnebago:lakeid/2,wisconsin:stateid/2],[essex_vt:cityid/3,vermont:stateid/2],[mississippi river:placeid/2,tennessee:stateid/2],[mauna kea:placeid/2,hawaii:stateid/2],[euclid_oh:cityid/3,usa:countryid/2],[snake:riverid/2,usa:countryid/2],[belle fourche river:placeid/2,usa:countryid/2],[boulder_co:cityid/3,colorado:stateid/2],[delaware river:placeid/2,usa:countryid/2],[allentown_pa:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,usa:countryid/2],[lower merion_pa:cityid/3,usa:countryid/2],[stockton_ca:cityid/3,usa:countryid/2],[bellevue_wa:cityid/3,washington:stateid/2],[lafayette_la:cityid/3,usa:countryid/2],[lynn_ma:cityid/3,massachusetts:stateid/2],[ocheyedan mound:placeid/2,iowa:stateid/2],[tenleytown:placeid/2,usa:countryid/2],[sill:mountainid/2,california:stateid/2],[miami beach_fl:cityid/3,usa:countryid/2],[provo_ut:cityid/3,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[arkansas river:placeid/2,usa:countryid/2],[concord_ca:cityid/3,usa:countryid/2],[middletown_nj:cityid/3,new jersey:stateid/2],[iowa:stateid/2,usa:countryid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[bridgeport_ct:cityid/3,connecticut:stateid/2],[superior:lakeid/2,michigan:stateid/2],[canton_oh:cityid/3,usa:countryid/2],[davenport_ia:cityid/3,iowa:stateid/2],[laredo_tx:cityid/3,texas:stateid/2],[kenner_la:cityid/3,usa:countryid/2],[tucson_az:cityid/3,usa:countryid/2],[bangor_me:cityid/3,maine:stateid/2],[fort worth_tx:cityid/3,usa:countryid/2],[fresno_ca:cityid/3,california:stateid/2],[west covina_ca:cityid/3,california:stateid/2],[lansing_mi:cityid/3,michigan:stateid/2],[knoxville_tn:cityid/3,usa:countryid/2],[new bedford_ma:cityid/3,usa:countryid/2],[east buttress:mountainid/2,usa:countryid/2],[washita:riverid/2,texas:stateid/2],[springfield_ma:cityid/3,usa:countryid/2],[riverside_ca:cityid/3,usa:countryid/2],[springfield_oh:cityid/3,usa:countryid/2],[little missouri:riverid/2,north dakota:stateid/2],[biloxi_ms:cityid/3,mississippi:stateid/2],[neosho:riverid/2,kansas:stateid/2],[north little rock_ar:cityid/3,arkansas:stateid/2],[macon_ga:cityid/3,georgia:stateid/2],[los angeles_ca:cityid/3,usa:countryid/2],[missouri:riverid/2,south dakota:stateid/2],[bear:mountainid/2,usa:countryid/2],[troy_mi:cityid/3,usa:countryid/2],[columbus_oh:cityid/3,ohio:stateid/2],[richmond_va:cityid/3,virginia:stateid/2],[north charleston_sc:cityid/3,south carolina:stateid/2],[erie_pa:cityid/3,pennsylvania:stateid/2],[chesapeake_va:cityid/3,usa:countryid/2],[maine:stateid/2,usa:countryid/2],[fort collins_co:cityid/3,colorado:stateid/2],[mobile_al:cityid/3,alabama:stateid/2],[superior:lakeid/2,minnesota:stateid/2],[norwalk_ct:cityid/3,usa:countryid/2],[cimarron:riverid/2,kansas:stateid/2],[saginaw_mi:cityid/3,usa:countryid/2],[laredo_tx:cityid/3,usa:countryid/2],[pontiac_mi:cityid/3,usa:countryid/2],[kenner_la:cityid/3,louisiana:stateid/2],[bethlehem_pa:cityid/3,usa:countryid/2],[potomac:riverid/2,west virginia:stateid/2],[mount whitney:placeid/2,usa:countryid/2],[fort wayne_in:cityid/3,usa:countryid/2],[lexington_ky:cityid/3,usa:countryid/2],[silver spring_md:cityid/3,usa:countryid/2],[shasta:mountainid/2,california:stateid/2],[new orleans_la:cityid/3,usa:countryid/2],[san leandro_ca:cityid/3,usa:countryid/2],[connecticut:riverid/2,new hampshire:stateid/2],[cheyenne_wy:cityid/3,wyoming:stateid/2],[atlantic ocean:placeid/2,south carolina:stateid/2],[hattiesburg_ms:cityid/3,mississippi:stateid/2],[cicero_il:cityid/3,usa:countryid/2],[browne tower:mountainid/2,usa:countryid/2],[mount katahdin:placeid/2,maine:stateid/2],[st. francis river:placeid/2,usa:countryid/2],[powder:riverid/2,usa:countryid/2],[taylor_mi:cityid/3,usa:countryid/2],[pine bluff_ar:cityid/3,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[mesquite_tx:cityid/3,usa:countryid/2],[mille lacs:lakeid/2,minnesota:stateid/2],[parkersburg_wv:cityid/3,west virginia:stateid/2],[austin_tx:cityid/3,texas:stateid/2],[idaho:stateid/2,usa:countryid/2],[clinton_mi:cityid/3,usa:countryid/2],[reno_nv:cityid/3,usa:countryid/2],[springfield_or:cityid/3,usa:countryid/2],[bianca:mountainid/2,colorado:stateid/2],[bloomington_mn:cityid/3,usa:countryid/2],[san mateo_ca:cityid/3,usa:countryid/2],[spokane_wa:cityid/3,washington:stateid/2],[anchorage_ak:cityid/3,alaska:stateid/2],[eugene_or:cityid/3,usa:countryid/2],[wilson:mountainid/2,usa:countryid/2],[citrus heights_ca:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,new hampshire:stateid/2],[rochester_mn:cityid/3,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[portsmouth_nh:cityid/3,new hampshire:stateid/2],[elyria_oh:cityid/3,usa:countryid/2],[mount washington:placeid/2,new hampshire:stateid/2],[sassafras mountain:placeid/2,usa:countryid/2],[arkansas river:placeid/2,colorado:stateid/2],[cranston_ri:cityid/3,usa:countryid/2],[yonkers_ny:cityid/3,usa:countryid/2],[glendale_az:cityid/3,arizona:stateid/2],[little missouri:riverid/2,usa:countryid/2],[rainier:mountainid/2,usa:countryid/2],[bayonne_nj:cityid/3,usa:countryid/2],[philadelphia_pa:cityid/3,pennsylvania:stateid/2],[yellowstone:riverid/2,north dakota:stateid/2],[lake erie:placeid/2,usa:countryid/2],[republican:riverid/2,usa:countryid/2],[okeechobee:lakeid/2,usa:countryid/2],[centerville:placeid/2,delaware:stateid/2],[cumberland:riverid/2,usa:countryid/2],[cedar rapids_ia:cityid/3,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[abilene_tx:cityid/3,texas:stateid/2],[tahoe:lakeid/2,california:stateid/2],[south gate_ca:cityid/3,usa:countryid/2],[edison_nj:cityid/3,new jersey:stateid/2],[gainesville_fl:cityid/3,usa:countryid/2],[granite peak:placeid/2,montana:stateid/2],[mississippi river:placeid/2,illinois:stateid/2],[champaign_il:cityid/3,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[hammond_in:cityid/3,usa:countryid/2],[largo_fl:cityid/3,usa:countryid/2],[st. joseph_mo:cityid/3,usa:countryid/2],[syracuse_ny:cityid/3,new york:stateid/2],[mount rainier:placeid/2,washington:stateid/2],[grand rapids_mi:cityid/3,michigan:stateid/2],[florida:stateid/2,usa:countryid/2],[casper_wy:cityid/3,wyoming:stateid/2],[yonkers_ny:cityid/3,new york:stateid/2],[st. petersburg_fl:cityid/3,usa:countryid/2],[west hartford_ct:cityid/3,usa:countryid/2],[lewiston_id:cityid/3,usa:countryid/2],[albuquerque_nm:cityid/3,new mexico:stateid/2],[omaha_ne:cityid/3,usa:countryid/2],[pontchartrain:lakeid/2,louisiana:stateid/2],[idaho falls_id:cityid/3,usa:countryid/2],[missoula_mt:cityid/3,usa:countryid/2],[champlain:lakeid/2,vermont:stateid/2],[duluth_mn:cityid/3,minnesota:stateid/2],[meridian_ms:cityid/3,mississippi:stateid/2],[salt lake city_ut:cityid/3,utah:stateid/2],[lake champlain:placeid/2,vermont:stateid/2],[richardson_tx:cityid/3,texas:stateid/2],[louisville_ky:cityid/3,kentucky:stateid/2],[detroit_mi:cityid/3,michigan:stateid/2],[mesa_az:cityid/3,arizona:stateid/2],[waco_tx:cityid/3,usa:countryid/2],[meriden_ct:cityid/3,usa:countryid/2],[montpelier_vt:cityid/3,vermont:stateid/2],[dayton_oh:cityid/3,usa:countryid/2],[becharof:lakeid/2,usa:countryid/2],[richardson_tx:cityid/3,usa:countryid/2],[fayetteville_nc:cityid/3,north carolina:stateid/2],[backbone mountain:placeid/2,maryland:stateid/2],[sitka_ak:cityid/3,alaska:stateid/2],[escondido_ca:cityid/3,usa:countryid/2],[cumberland:riverid/2,kentucky:stateid/2],[olympia_wa:cityid/3,washington:stateid/2],[clingmans dome:placeid/2,tennessee:stateid/2],[compton_ca:cityid/3,california:stateid/2],[arvada_co:cityid/3,usa:countryid/2],[toledo_oh:cityid/3,ohio:stateid/2],[schenectady_ny:cityid/3,new york:stateid/2],[garden grove_ca:cityid/3,usa:countryid/2],[hattiesburg_ms:cityid/3,usa:countryid/2],[torrance_ca:cityid/3,california:stateid/2],[powder:riverid/2,montana:stateid/2],[torreys:mountainid/2,usa:countryid/2],[south platte:riverid/2,colorado:stateid/2],[toledo_oh:cityid/3,usa:countryid/2],[casper_wy:cityid/3,usa:countryid/2],[bross:mountainid/2,colorado:stateid/2],[ogden_ut:cityid/3,utah:stateid/2],[lakewood_oh:cityid/3,usa:countryid/2],[arkansas:riverid/2,colorado:stateid/2],[davenport_ia:cityid/3,usa:countryid/2],[north platte:riverid/2,nebraska:stateid/2],[new britain_ct:cityid/3,connecticut:stateid/2],[republican:riverid/2,colorado:stateid/2],[high point:placeid/2,new jersey:stateid/2],[madison_wi:cityid/3,wisconsin:stateid/2],[abingdon_pa:cityid/3,pennsylvania:stateid/2],[champlain:lakeid/2,new york:stateid/2],[cicero_il:cityid/3,illinois:stateid/2],[new britain_ct:cityid/3,usa:countryid/2],[decatur_il:cityid/3,usa:countryid/2],[syracuse_ny:cityid/3,usa:countryid/2],[brasstown bald:placeid/2,usa:countryid/2],[st. clair shores_mi:cityid/3,usa:countryid/2],[durham_nc:cityid/3,usa:countryid/2],[humphreys peak:placeid/2,arizona:stateid/2],[saginaw_mi:cityid/3,michigan:stateid/2],[green bay_wi:cityid/3,usa:countryid/2],[little river:placeid/2,usa:countryid/2],[little missouri:riverid/2,montana:stateid/2],[philadelphia_pa:cityid/3,usa:countryid/2],[red:riverid/2,arkansas:stateid/2],[gainesville_fl:cityid/3,florida:stateid/2],[youngstown_oh:cityid/3,ohio:stateid/2],[fullerton_ca:cityid/3,usa:countryid/2],[new haven_ct:cityid/3,connecticut:stateid/2],[new york_ny:cityid/3,new york:stateid/2],[oceanside_ca:cityid/3,usa:countryid/2],[boundary peak:placeid/2,usa:countryid/2],[irvington_nj:cityid/3,usa:countryid/2],[berkeley_ca:cityid/3,usa:countryid/2],[racine_wi:cityid/3,usa:countryid/2],[des moines_ia:cityid/3,usa:countryid/2],[niagara falls_ny:cityid/3,new york:stateid/2],[washington_dc:cityid/3,district of columbia:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[mesquite_tx:cityid/3,texas:stateid/2],[bismarck_nd:cityid/3,usa:countryid/2],[rockford_il:cityid/3,usa:countryid/2],[harvard:mountainid/2,colorado:stateid/2],[nashua_nh:cityid/3,new hampshire:stateid/2],[chattanooga_tn:cityid/3,tennessee:stateid/2],[daly city_ca:cityid/3,california:stateid/2],[erie:lakeid/2,pennsylvania:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[ohio:stateid/2,usa:countryid/2],[miami beach_fl:cityid/3,florida:stateid/2],[santa monica_ca:cityid/3,california:stateid/2],[costa mesa_ca:cityid/3,california:stateid/2],[dearborn_mi:cityid/3,usa:countryid/2],[charles mound:placeid/2,illinois:stateid/2],[honolulu_hi:cityid/3,hawaii:stateid/2],[kennedy:mountainid/2,usa:countryid/2],[lowell_ma:cityid/3,massachusetts:stateid/2],[north platte:riverid/2,colorado:stateid/2],[borah peak:placeid/2,usa:countryid/2],[allegheny:riverid/2,usa:countryid/2],[tyler_tx:cityid/3,usa:countryid/2],[chesapeake_va:cityid/3,virginia:stateid/2],[memphis_tn:cityid/3,tennessee:stateid/2],[fairfield_ca:cityid/3,usa:countryid/2],[cheektowaga_ny:cityid/3,new york:stateid/2],[mount washington:placeid/2,usa:countryid/2],[concord_nh:cityid/3,new hampshire:stateid/2],[little rock_ar:cityid/3,arkansas:stateid/2],[north little rock_ar:cityid/3,usa:countryid/2],[port arthur_tx:cityid/3,usa:countryid/2],[walton county:placeid/2,usa:countryid/2],[eagle mountain:placeid/2,minnesota:stateid/2],[ohio:riverid/2,indiana:stateid/2],[michigan:lakeid/2,indiana:stateid/2],[rock springs_wy:cityid/3,wyoming:stateid/2],[red:lakeid/2,minnesota:stateid/2],[alabama:stateid/2,usa:countryid/2],[akron_oh:cityid/3,usa:countryid/2],[warren_mi:cityid/3,usa:countryid/2],[centerville:placeid/2,usa:countryid/2],[niobrara:riverid/2,wyoming:stateid/2],[lakewood_ca:cityid/3,usa:countryid/2],[delaware river:placeid/2,pennsylvania:stateid/2],[republican:riverid/2,kansas:stateid/2],[kit carson:mountainid/2,usa:countryid/2],[waterford_mi:cityid/3,michigan:stateid/2],[magazine mountain:placeid/2,usa:countryid/2],[cedar rapids_ia:cityid/3,iowa:stateid/2],[lorain_oh:cityid/3,usa:countryid/2],[red bluff reservoir:placeid/2,new mexico:stateid/2],[gila:riverid/2,usa:countryid/2],[worcester_ma:cityid/3,usa:countryid/2],[farmington hills_mi:cityid/3,usa:countryid/2],[anchorage_ak:cityid/3,usa:countryid/2],[montgomery_al:cityid/3,alabama:stateid/2],[springfield_or:cityid/3,oregon:stateid/2],[tennessee:riverid/2,kentucky:stateid/2],[shreveport_la:cityid/3,louisiana:stateid/2],[north palisade:mountainid/2,california:stateid/2],[baltimore_md:cityid/3,usa:countryid/2],[east orange_nj:cityid/3,new jersey:stateid/2],[austin_tx:cityid/3,usa:countryid/2],[portsmouth_va:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,usa:countryid/2],[greenwich_ct:cityid/3,usa:countryid/2],[canadian:riverid/2,oklahoma:stateid/2],[santa barbara_ca:cityid/3,usa:countryid/2],[wichita_ks:cityid/3,kansas:stateid/2],[mississippi river:placeid/2,iowa:stateid/2],[annapolis_md:cityid/3,maryland:stateid/2],[black mesa:placeid/2,oklahoma:stateid/2],[mckinley:mountainid/2,alaska:stateid/2],[kansas:stateid/2,usa:countryid/2],[paterson_nj:cityid/3,usa:countryid/2],[wrangell:mountainid/2,alaska:stateid/2],[alaska:stateid/2,usa:countryid/2],[escondido_ca:cityid/3,california:stateid/2],[white butte:placeid/2,usa:countryid/2],[flint_mi:cityid/3,usa:countryid/2],[madison_wi:cityid/3,usa:countryid/2],[berkeley_ca:cityid/3,california:stateid/2],[columbia_sc:cityid/3,south carolina:stateid/2],[red:riverid/2,new mexico:stateid/2],[tampa_fl:cityid/3,florida:stateid/2],[lewiston_id:cityid/3,idaho:stateid/2],[san diego_ca:cityid/3,usa:countryid/2],[santa fe_nm:cityid/3,new mexico:stateid/2],[new bedford_ma:cityid/3,massachusetts:stateid/2],[great falls_mt:cityid/3,usa:countryid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[meriden_ct:cityid/3,connecticut:stateid/2],[waco_tx:cityid/3,texas:stateid/2],[pomona_ca:cityid/3,california:stateid/2],[simi valley_ca:cityid/3,usa:countryid/2],[warren_mi:cityid/3,michigan:stateid/2],[belford:mountainid/2,colorado:stateid/2],[modesto_ca:cityid/3,california:stateid/2],[euclid_oh:cityid/3,ohio:stateid/2],[el paso_tx:cityid/3,usa:countryid/2],[stamford_ct:cityid/3,connecticut:stateid/2],[knoxville_tn:cityid/3,tennessee:stateid/2],[north dakota:stateid/2,usa:countryid/2],[macon_ga:cityid/3,usa:countryid/2],[altoona_pa:cityid/3,usa:countryid/2],[overland park_ks:cityid/3,usa:countryid/2],[rainy:lakeid/2,usa:countryid/2],[harney peak:placeid/2,south dakota:stateid/2],[metairie_la:cityid/3,louisiana:stateid/2],[mount elbert:placeid/2,usa:countryid/2],[foraker:mountainid/2,usa:countryid/2],[republican:riverid/2,nebraska:stateid/2],[little river:placeid/2,oklahoma:stateid/2],[grand prairie_tx:cityid/3,usa:countryid/2],[blackburn:mountainid/2,alaska:stateid/2],[salton sea:lakeid/2,usa:countryid/2],[connecticut:stateid/2,usa:countryid/2],[crestone:mountainid/2,usa:countryid/2],[high point_nc:cityid/3,usa:countryid/2],[neosho:riverid/2,usa:countryid/2],[teshekpuk:lakeid/2,usa:countryid/2],[oak lawn_il:cityid/3,illinois:stateid/2],[cleveland_oh:cityid/3,usa:countryid/2],[chula vista_ca:cityid/3,usa:countryid/2],[providence_ri:cityid/3,usa:countryid/2],[clearwater_fl:cityid/3,florida:stateid/2],[mount davis:placeid/2,usa:countryid/2],[rapid city_sd:cityid/3,usa:countryid/2],[lawton_ok:cityid/3,oklahoma:stateid/2],[huntington beach_ca:cityid/3,usa:countryid/2],[oxnard_ca:cityid/3,usa:countryid/2],[royal oak_mi:cityid/3,usa:countryid/2],[atlanta_ga:cityid/3,georgia:stateid/2],[fargo_nd:cityid/3,north dakota:stateid/2],[evansville_in:cityid/3,indiana:stateid/2],[erie:lakeid/2,ohio:stateid/2],[kentucky:stateid/2,usa:countryid/2],[north carolina:stateid/2,usa:countryid/2],[niagara falls_ny:cityid/3,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[baton rouge_la:cityid/3,usa:countryid/2],[north palisade:mountainid/2,usa:countryid/2],[lincoln_ne:cityid/3,nebraska:stateid/2],[sunnyvale_ca:cityid/3,california:stateid/2],[sparks_nv:cityid/3,nevada:stateid/2],[mckinley:mountainid/2,usa:countryid/2],[red:riverid/2,texas:stateid/2],[st. paul_mn:cityid/3,minnesota:stateid/2],[scranton_pa:cityid/3,pennsylvania:stateid/2],[waukegan_il:cityid/3,usa:countryid/2],[charleston_wv:cityid/3,usa:countryid/2],[covington_ky:cityid/3,kentucky:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[levittown_ny:cityid/3,usa:countryid/2],[new orleans:placeid/2,usa:countryid/2],[whitney:mountainid/2,usa:countryid/2],[evanston_il:cityid/3,illinois:stateid/2],[columbia:riverid/2,oregon:stateid/2],[georgia:stateid/2,usa:countryid/2],[danbury_ct:cityid/3,usa:countryid/2],[waltham_ma:cityid/3,usa:countryid/2],[gulf of mexico:placeid/2,mississippi:stateid/2],[niobrara:riverid/2,usa:countryid/2],[churchill:mountainid/2,usa:countryid/2],[crestone:mountainid/2,colorado:stateid/2],[billings_mt:cityid/3,usa:countryid/2],[pierre_sd:cityid/3,south dakota:stateid/2],[cherry hill_nj:cityid/3,usa:countryid/2],[sassafras mountain:placeid/2,south carolina:stateid/2],[helena_mt:cityid/3,montana:stateid/2],[pacific ocean:placeid/2,usa:countryid/2],[shavano:mountainid/2,usa:countryid/2],[somerville_ma:cityid/3,usa:countryid/2],[white:riverid/2,usa:countryid/2],[clinton_mi:cityid/3,michigan:stateid/2],[flathead:lakeid/2,montana:stateid/2],[santa ana_ca:cityid/3,california:stateid/2],[metairie_la:cityid/3,usa:countryid/2],[danbury_ct:cityid/3,connecticut:stateid/2],[new jersey:stateid/2,usa:countryid/2],[carson_ca:cityid/3,usa:countryid/2],[mount katahdin:placeid/2,usa:countryid/2],[mcallen_tx:cityid/3,usa:countryid/2],[mount davidson:placeid/2,san francisco_ca:cityid/3],[hammond_in:cityid/3,indiana:stateid/2],[tuscaloosa_al:cityid/3,usa:countryid/2],[idaho falls_id:cityid/3,idaho:stateid/2],[guadalupe peak:placeid/2,usa:countryid/2],[costa mesa_ca:cityid/3,usa:countryid/2],[auburn_me:cityid/3,usa:countryid/2],[wichita falls_tx:cityid/3,texas:stateid/2],[jackson_ms:cityid/3,mississippi:stateid/2],[gila:riverid/2,new mexico:stateid/2],[dover_de:cityid/3,delaware:stateid/2],[fort lauderdale_fl:cityid/3,usa:countryid/2],[ohio river:placeid/2,indiana:stateid/2],[quincy_ma:cityid/3,usa:countryid/2],[reno_nv:cityid/3,nevada:stateid/2],[dover_de:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,new york:stateid/2],[milwaukee_wi:cityid/3,wisconsin:stateid/2],[lexington_ky:cityid/3,kentucky:stateid/2],[lake michigan:placeid/2,usa:countryid/2],[superior:lakeid/2,wisconsin:stateid/2],[paterson_nj:cityid/3,new jersey:stateid/2],[potomac:riverid/2,virginia:stateid/2],[sacramento_ca:cityid/3,california:stateid/2],[rainy:lakeid/2,minnesota:stateid/2],[indiana:stateid/2,usa:countryid/2],[warwick_ri:cityid/3,rhode island:stateid/2],[wheeler peak:placeid/2,usa:countryid/2],[wichita falls_tx:cityid/3,usa:countryid/2],[snake:riverid/2,wyoming:stateid/2],[dearborn heights_mi:cityid/3,michigan:stateid/2],[washington:stateid/2,usa:countryid/2],[huntsville_al:cityid/3,alabama:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[springfield_ma:cityid/3,massachusetts:stateid/2],[colorado:riverid/2,arizona:stateid/2],[kootenai river:placeid/2,usa:countryid/2],[anderson_in:cityid/3,usa:countryid/2],[nashua_nh:cityid/3,usa:countryid/2],[canton_oh:cityid/3,ohio:stateid/2],[glendale_az:cityid/3,usa:countryid/2],[juneau_ak:cityid/3,usa:countryid/2],[kalamazoo_mi:cityid/3,usa:countryid/2],[fort smith_ar:cityid/3,arkansas:stateid/2],[browne tower:mountainid/2,alaska:stateid/2],[mount mitchell:placeid/2,north carolina:stateid/2],[st. elias:mountainid/2,alaska:stateid/2],[kettering_oh:cityid/3,usa:countryid/2],[woodbridge_nj:cityid/3,new jersey:stateid/2],[lincoln:mountainid/2,colorado:stateid/2],[muncie_in:cityid/3,indiana:stateid/2],[green bay_wi:cityid/3,wisconsin:stateid/2],[kings peak:placeid/2,usa:countryid/2],[fort lauderdale_fl:cityid/3,florida:stateid/2],[minot_nd:cityid/3,north dakota:stateid/2],[bighorn:riverid/2,usa:countryid/2],[red river:placeid/2,usa:countryid/2],[el cajon_ca:cityid/3,usa:countryid/2],[independence_mo:cityid/3,missouri:stateid/2],[cambridge_ma:cityid/3,usa:countryid/2],[churchill:mountainid/2,alaska:stateid/2],[mississippi:riverid/2,missouri:stateid/2],[norman_ok:cityid/3,usa:countryid/2],[santa rosa_ca:cityid/3,usa:countryid/2],[newton_ma:cityid/3,usa:countryid/2],[fremont_ca:cityid/3,california:stateid/2],[mount vernon_ny:cityid/3,new york:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[ogden_ut:cityid/3,usa:countryid/2],[ouachita river:placeid/2,arkansas:stateid/2],[cherry hill_nj:cityid/3,new jersey:stateid/2],[utica_ny:cityid/3,usa:countryid/2],[st. paul_mn:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,massachusetts:stateid/2],[inglewood_ca:cityid/3,california:stateid/2],[south buttress:mountainid/2,usa:countryid/2],[wilmington_de:cityid/3,usa:countryid/2],[huron:lakeid/2,michigan:stateid/2],[atlantic ocean:placeid/2,virginia:stateid/2],[rochester_mn:cityid/3,minnesota:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[franklin township:placeid/2,indiana:stateid/2],[arlington heights_il:cityid/3,illinois:stateid/2],[bristol_ct:cityid/3,usa:countryid/2],[tuscaloosa_al:cityid/3,alabama:stateid/2],[huntington_wv:cityid/3,west virginia:stateid/2],[mount frissell:placeid/2,usa:countryid/2],[maryland:stateid/2,usa:countryid/2],[salt lake city_ut:cityid/3,usa:countryid/2],[pacific ocean:placeid/2,washington:stateid/2],[michigan:lakeid/2,illinois:stateid/2],[garland_tx:cityid/3,texas:stateid/2],[yellowstone:riverid/2,montana:stateid/2],[carson_ca:cityid/3,california:stateid/2],[tenleytown_dc:cityid/3,district of columbia:stateid/2],[pittsburgh_pa:cityid/3,pennsylvania:stateid/2],[delaware:riverid/2,usa:countryid/2],[ann arbor_mi:cityid/3,usa:countryid/2],[rutland_vt:cityid/3,vermont:stateid/2],[dakota:riverid/2,north dakota:stateid/2],[port arthur_tx:cityid/3,texas:stateid/2],[green:riverid/2,colorado:stateid/2],[orange_ca:cityid/3,california:stateid/2],[lake champlain:placeid/2,usa:countryid/2],[las cruces_nm:cityid/3,usa:countryid/2],[tampa_fl:cityid/3,usa:countryid/2],[quincy_ma:cityid/3,massachusetts:stateid/2],[mount mckinley:placeid/2,alaska:stateid/2],[shavano:mountainid/2,colorado:stateid/2],[bear:mountainid/2,alaska:stateid/2],[pontchartrain:lakeid/2,usa:countryid/2],[youngstown_oh:cityid/3,usa:countryid/2],[anaheim_ca:cityid/3,california:stateid/2],[michigan:stateid/2,usa:countryid/2],[montgomery_al:cityid/3,usa:countryid/2],[dakota:riverid/2,usa:countryid/2],[wyoming_mi:cityid/3,usa:countryid/2],[arlington_tx:cityid/3,texas:stateid/2],[new haven_ct:cityid/3,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[louisville_ky:cityid/3,usa:countryid/2],[thousand oaks_ca:cityid/3,california:stateid/2],[san diego_ca:cityid/3,california:stateid/2],[wheeler peak:placeid/2,new mexico:stateid/2],[laramie_wy:cityid/3,wyoming:stateid/2],[potomac river:placeid/2,district of columbia:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[maroon:mountainid/2,colorado:stateid/2],[arlington_tx:cityid/3,usa:countryid/2],[detroit_mi:cityid/3,usa:countryid/2],[kalamazoo_mi:cityid/3,michigan:stateid/2],[granite peak:placeid/2,usa:countryid/2],[nebraska:stateid/2,usa:countryid/2],[dallas_tx:cityid/3,texas:stateid/2],[potomac:riverid/2,usa:countryid/2],[mount greylock:placeid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[arlington heights_il:cityid/3,usa:countryid/2],[columbus_oh:cityid/3,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[chula vista_ca:cityid/3,california:stateid/2],[charleston_sc:cityid/3,south carolina:stateid/2],[big stone lake:placeid/2,south dakota:stateid/2],[georgetown_dc:cityid/3,usa:countryid/2],[pueblo_co:cityid/3,usa:countryid/2],[sanford:mountainid/2,alaska:stateid/2],[alexandria_va:cityid/3,virginia:stateid/2],[clifton_nj:cityid/3,new jersey:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[tulsa_ok:cityid/3,oklahoma:stateid/2],[scotts valley_ca:cityid/3,california:stateid/2],[hubbard:mountainid/2,usa:countryid/2],[waukegan_il:cityid/3,illinois:stateid/2],[albany_ga:cityid/3,georgia:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[las vegas_nv:cityid/3,nevada:stateid/2],[indianapolis_in:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,north carolina:stateid/2],[mount mansfield:placeid/2,vermont:stateid/2],[birmingham_al:cityid/3,usa:countryid/2],[white:mountainid/2,usa:countryid/2],[woodbridge_nj:cityid/3,usa:countryid/2],[california:stateid/2,usa:countryid/2],[atlantic ocean:placeid/2,usa:countryid/2],[new york_ny:cityid/3,usa:countryid/2],[washita:riverid/2,usa:countryid/2],[hayward_ca:cityid/3,california:stateid/2],[johnson township:placeid/2,nebraska:stateid/2],[arkansas:riverid/2,arkansas:stateid/2],[dubuque_ia:cityid/3,usa:countryid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[farmington hills_mi:cityid/3,michigan:stateid/2],[somerville_ma:cityid/3,massachusetts:stateid/2],[grand rapids_mi:cityid/3,usa:countryid/2],[daly city_ca:cityid/3,usa:countryid/2],[pensacola_fl:cityid/3,florida:stateid/2],[kenosha_wi:cityid/3,usa:countryid/2],[big stone lake:placeid/2,usa:countryid/2],[thousand oaks_ca:cityid/3,usa:countryid/2],[omaha_ne:cityid/3,nebraska:stateid/2],[brockton_ma:cityid/3,usa:countryid/2],[little rock_ar:cityid/3,usa:countryid/2],[camden_nj:cityid/3,new jersey:stateid/2],[elbert:mountainid/2,usa:countryid/2],[birmingham_al:cityid/3,alabama:stateid/2],[wabash:riverid/2,ohio:stateid/2],[vermont:stateid/2,usa:countryid/2],[savannah_ga:cityid/3,usa:countryid/2],[monroe_la:cityid/3,usa:countryid/2],[smoky hill:riverid/2,kansas:stateid/2],[meridian_ms:cityid/3,usa:countryid/2],[norman_ok:cityid/3,oklahoma:stateid/2],[las vegas_nv:cityid/3,usa:countryid/2],[alhambra_ca:cityid/3,california:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[honolulu_hi:cityid/3,usa:countryid/2],[ewa_hi:cityid/3,hawaii:stateid/2],[glendale_ca:cityid/3,usa:countryid/2],[antero:mountainid/2,usa:countryid/2],[southeast corner:placeid/2,nebraska:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[buena park_ca:cityid/3,usa:countryid/2],[taum sauk mountain:placeid/2,missouri:stateid/2],[wilson:mountainid/2,colorado:stateid/2],[topeka_ks:cityid/3,kansas:stateid/2],[brockton_ma:cityid/3,massachusetts:stateid/2],[massive:mountainid/2,usa:countryid/2],[san jose_ca:cityid/3,california:stateid/2],[kit carson:mountainid/2,colorado:stateid/2],[lake of the woods:lakeid/2,minnesota:stateid/2],[cincinnati_oh:cityid/3,ohio:stateid/2],[duval circle_dc:cityid/3,district of columbia:stateid/2],[burlington_vt:cityid/3,vermont:stateid/2],[pacific ocean:placeid/2,hawaii:stateid/2],[lake charles_la:cityid/3,louisiana:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[sioux city_ia:cityid/3,usa:countryid/2],[naknek:lakeid/2,usa:countryid/2],[newport news_va:cityid/3,virginia:stateid/2],[flathead:lakeid/2,usa:countryid/2],[kansas city_mo:cityid/3,missouri:stateid/2],[santa fe_nm:cityid/3,usa:countryid/2],[greenwich_ct:cityid/3,connecticut:stateid/2],[hollywood_fl:cityid/3,usa:countryid/2],[red bluff reservoir:placeid/2,usa:countryid/2],[springfield_il:cityid/3,usa:countryid/2],[mississippi:riverid/2,minnesota:stateid/2],[tacoma_wa:cityid/3,washington:stateid/2],[lawton_ok:cityid/3,usa:countryid/2],[southfield_mi:cityid/3,usa:countryid/2],[miami_fl:cityid/3,florida:stateid/2],[alhambra_ca:cityid/3,usa:countryid/2],[raleigh_nc:cityid/3,north carolina:stateid/2],[waterloo_ia:cityid/3,iowa:stateid/2],[campbell hill:placeid/2,ohio:stateid/2],[citrus heights_ca:cityid/3,california:stateid/2],[butte_mt:cityid/3,montana:stateid/2],[lynn_ma:cityid/3,usa:countryid/2],[white:riverid/2,arkansas:stateid/2],[aberdeen_sd:cityid/3,south dakota:stateid/2],[norfolk_va:cityid/3,usa:countryid/2],[hayward_ca:cityid/3,usa:countryid/2],[el monte_ca:cityid/3,california:stateid/2],[stamford_ct:cityid/3,usa:countryid/2],[utah:stateid/2,usa:countryid/2],[atlantic ocean:placeid/2,delaware:stateid/2],[longs:mountainid/2,colorado:stateid/2],[irondequoit_ny:cityid/3,new york:stateid/2],[beaumont_tx:cityid/3,usa:countryid/2],[san juan:riverid/2,colorado:stateid/2],[rapid city_sd:cityid/3,south dakota:stateid/2],[princeton:mountainid/2,colorado:stateid/2],[peoria_il:cityid/3,illinois:stateid/2],[rock springs_wy:cityid/3,usa:countryid/2],[sioux falls_sd:cityid/3,south dakota:stateid/2],[newark_nj:cityid/3,new jersey:stateid/2],[new rochelle_ny:cityid/3,usa:countryid/2],[vancouver:mountainid/2,usa:countryid/2],[atlantic ocean:placeid/2,maryland:stateid/2],[provo_ut:cityid/3,utah:stateid/2],[snake river:placeid/2,idaho:stateid/2],[minnesota:stateid/2,usa:countryid/2],[san leandro_ca:cityid/3,california:stateid/2],[hudson:riverid/2,new york:stateid/2],[bellevue_wa:cityid/3,usa:countryid/2],[burbank_ca:cityid/3,california:stateid/2],[long island sound:placeid/2,usa:countryid/2],[snake:riverid/2,oregon:stateid/2],[high point_nc:cityid/3,north carolina:stateid/2],[raleigh_nc:cityid/3,usa:countryid/2],[ventura_ca:cityid/3,california:stateid/2],[compton_ca:cityid/3,usa:countryid/2],[campbell hill:placeid/2,usa:countryid/2],[albany_ga:cityid/3,usa:countryid/2],[connecticut:riverid/2,usa:countryid/2],[fairweather:mountainid/2,usa:countryid/2],[vancouver:mountainid/2,alaska:stateid/2],[bristol township_pa:cityid/3,usa:countryid/2],[muncie_in:cityid/3,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[miami_fl:cityid/3,usa:countryid/2],[st. petersburg_fl:cityid/3,florida:stateid/2],[iliamna:lakeid/2,usa:countryid/2],[champlain:lakeid/2,usa:countryid/2],[southeast corner:placeid/2,usa:countryid/2],[sacramento_ca:cityid/3,usa:countryid/2],[middletown_nj:cityid/3,usa:countryid/2],[kennedy:mountainid/2,alaska:stateid/2],[spruce knob:placeid/2,west virginia:stateid/2],[long island sound:placeid/2,connecticut:stateid/2],[williamson:mountainid/2,usa:countryid/2],[west allis_wi:cityid/3,wisconsin:stateid/2],[fayetteville_nc:cityid/3,usa:countryid/2],[minneapolis_mn:cityid/3,usa:countryid/2],[sitka_ak:cityid/3,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[modesto_ca:cityid/3,usa:countryid/2],[torreys:mountainid/2,colorado:stateid/2],[pasadena_ca:cityid/3,california:stateid/2],[antero:mountainid/2,colorado:stateid/2],[st. francis:riverid/2,usa:countryid/2],[vallejo_ca:cityid/3,california:stateid/2],[portsmouth_va:cityid/3,virginia:stateid/2],[bennington_vt:cityid/3,usa:countryid/2],[erie:lakeid/2,michigan:stateid/2],[eugene_or:cityid/3,oregon:stateid/2],[plano_tx:cityid/3,texas:stateid/2],[norwalk_ca:cityid/3,usa:countryid/2],[hamilton_oh:cityid/3,usa:countryid/2],[springfield_mo:cityid/3,usa:countryid/2],[massive:mountainid/2,colorado:stateid/2],[norfolk_va:cityid/3,virginia:stateid/2],[uncompahgre:mountainid/2,usa:countryid/2],[independence_mo:cityid/3,usa:countryid/2],[driskill mountain:placeid/2,louisiana:stateid/2],[san francisco_ca:cityid/3,california:stateid/2],[mount marcy:placeid/2,new york:stateid/2],[washington_dc:cityid/3,usa:countryid/2],[bangor_me:cityid/3,usa:countryid/2],[salem_or:cityid/3,oregon:stateid/2],[skokie_il:cityid/3,illinois:stateid/2],[quandary:mountainid/2,usa:countryid/2],[black mountain:placeid/2,kentucky:stateid/2],[downey_ca:cityid/3,california:stateid/2],[sterling heights_mi:cityid/3,michigan:stateid/2],[champaign_il:cityid/3,illinois:stateid/2],[harvard:mountainid/2,usa:countryid/2],[salem_or:cityid/3,usa:countryid/2],[baton rouge_la:cityid/3,louisiana:stateid/2],[washita:riverid/2,oklahoma:stateid/2],[north platte_ne:cityid/3,nebraska:stateid/2],[west valley_ut:cityid/3,utah:stateid/2],[lakewood_co:cityid/3,colorado:stateid/2],[watertown_sd:cityid/3,usa:countryid/2],[woodall mountain:placeid/2,mississippi:stateid/2],[san jose_ca:cityid/3,usa:countryid/2],[irondequoit_ny:cityid/3,usa:countryid/2],[mountain view_ca:cityid/3,california:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[black mesa:placeid/2,usa:countryid/2],[mauna kea:placeid/2,usa:countryid/2],[burlington_vt:cityid/3,usa:countryid/2],[greenville_sc:cityid/3,usa:countryid/2],[jacksonville_fl:cityid/3,usa:countryid/2],[boston_ma:cityid/3,massachusetts:stateid/2],[seattle_wa:cityid/3,washington:stateid/2],[ventura_ca:cityid/3,usa:countryid/2],[lawrence_ma:cityid/3,usa:countryid/2],[ohio:riverid/2,kentucky:stateid/2],[westminster_ca:cityid/3,usa:countryid/2],[alverstone:mountainid/2,usa:countryid/2],[livonia_mi:cityid/3,usa:countryid/2],[winston-salem_nc:cityid/3,north carolina:stateid/2],[richmond_ca:cityid/3,california:stateid/2],[kootenai river:placeid/2,montana:stateid/2],[tempe_az:cityid/3,arizona:stateid/2],[irvine_ca:cityid/3,usa:countryid/2],[parma_oh:cityid/3,ohio:stateid/2],[pocatello_id:cityid/3,usa:countryid/2],[west allis_wi:cityid/3,usa:countryid/2],[mississippi river:placeid/2,kentucky:stateid/2],[st. clair:lakeid/2,usa:countryid/2],[pearl:riverid/2,michigan:stateid/2],[tempe_az:cityid/3,usa:countryid/2],[hampton_va:cityid/3,usa:countryid/2],[southfield_mi:cityid/3,michigan:stateid/2],[arlington_va:cityid/3,usa:countryid/2],[mount rainier:placeid/2,usa:countryid/2],[tahoe:lakeid/2,usa:countryid/2],[greensboro_nc:cityid/3,usa:countryid/2],[mount curwood:placeid/2,usa:countryid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[atlantic ocean:placeid/2,georgia:stateid/2],[bristol township_pa:cityid/3,pennsylvania:stateid/2],[stockton_ca:cityid/3,california:stateid/2],[troy_mi:cityid/3,michigan:stateid/2],[south carolina:stateid/2,usa:countryid/2],[el diente:mountainid/2,colorado:stateid/2],[joliet_il:cityid/3,illinois:stateid/2],[biloxi_ms:cityid/3,usa:countryid/2],[lowell_ma:cityid/3,usa:countryid/2],[clingmans dome:placeid/2,usa:countryid/2],[fairbanks_ak:cityid/3,usa:countryid/2],[el paso_tx:cityid/3,texas:stateid/2],[lawrence_ma:cityid/3,massachusetts:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[springfield_oh:cityid/3,ohio:stateid/2],[erie:lakeid/2,new york:stateid/2],[frankfort_ky:cityid/3,kentucky:stateid/2],[erie_pa:cityid/3,usa:countryid/2],[pennsylvania:stateid/2,usa:countryid/2],[death valley:placeid/2,california:stateid/2],[el diente:mountainid/2,usa:countryid/2],[connecticut:riverid/2,massachusetts:stateid/2],[great falls_mt:cityid/3,montana:stateid/2],[levittown_ny:cityid/3,new york:stateid/2],[wyoming:stateid/2,usa:countryid/2],[south platte:riverid/2,nebraska:stateid/2],[anderson_in:cityid/3,indiana:stateid/2],[boundary peak:placeid/2,nevada:stateid/2],[uncompahgre:mountainid/2,colorado:stateid/2],[lake erie:placeid/2,michigan:stateid/2],[guadalupe peak:placeid/2,texas:stateid/2],[overland park_ks:cityid/3,kansas:stateid/2],[chicago_il:cityid/3,illinois:stateid/2],[wahiawa_hi:cityid/3,hawaii:stateid/2],[st. clair:lakeid/2,michigan:stateid/2],[pocatello_id:cityid/3,idaho:stateid/2],[castle:mountainid/2,colorado:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[san bernardino_ca:cityid/3,california:stateid/2],[kettering_oh:cityid/3,ohio:stateid/2],[sunrise manor_nv:cityid/3,usa:countryid/2],[pontiac_mi:cityid/3,michigan:stateid/2],[south bend_in:cityid/3,usa:countryid/2],[mount vernon_ny:cityid/3,usa:countryid/2],[quandary:mountainid/2,colorado:stateid/2],[brookside_de:cityid/3,usa:countryid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[san mateo_ca:cityid/3,california:stateid/2],[newton_ma:cityid/3,massachusetts:stateid/2],[hamilton_oh:cityid/3,ohio:stateid/2],[evans:mountainid/2,colorado:stateid/2],[cranston_ri:cityid/3,rhode island:stateid/2],[williamson:mountainid/2,california:stateid/2],[manchester_nh:cityid/3,usa:countryid/2],[longs:mountainid/2,usa:countryid/2],[new orleans:placeid/2,louisiana:stateid/2],[bianca:mountainid/2,usa:countryid/2],[santa monica_ca:cityid/3,usa:countryid/2],[east buttress:mountainid/2,alaska:stateid/2],[columbia:riverid/2,washington:stateid/2],[pasadena_tx:cityid/3,usa:countryid/2],[bismarck_nd:cityid/3,north dakota:stateid/2],[blackburn:mountainid/2,usa:countryid/2],[dearborn_mi:cityid/3,michigan:stateid/2],[great salt lake:lakeid/2,utah:stateid/2],[arvada_co:cityid/3,colorado:stateid/2],[colorado:stateid/2,usa:countryid/2],[framingham_ma:cityid/3,usa:countryid/2],[hawaii:stateid/2,usa:countryid/2],[borah peak:placeid/2,idaho:stateid/2],[bethesda_md:cityid/3,usa:countryid/2],[michigan:lakeid/2,usa:countryid/2],[san angelo_tx:cityid/3,texas:stateid/2],[seattle_wa:cityid/3,usa:countryid/2],[glendale_ca:cityid/3,california:stateid/2],[alexandria_va:cityid/3,usa:countryid/2],[columbia:riverid/2,usa:countryid/2],[duval circle_dc:cityid/3,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[portland_or:cityid/3,usa:countryid/2],[oak lawn_il:cityid/3,usa:countryid/2],[racine_wi:cityid/3,wisconsin:stateid/2],[beaver dam creek:placeid/2,utah:stateid/2],[cheyenne_wy:cityid/3,usa:countryid/2],[evanston_il:cityid/3,usa:countryid/2],[dubuque_ia:cityid/3,iowa:stateid/2],[huntington_wv:cityid/3,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[plano_tx:cityid/3,usa:countryid/2],[san juan:riverid/2,new mexico:stateid/2],[buffalo_ny:cityid/3,usa:countryid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[mount hood:placeid/2,usa:countryid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[lincoln:mountainid/2,usa:countryid/2],[wheeling_wv:cityid/3,west virginia:stateid/2],[red:riverid/2,usa:countryid/2],[harrisburg_pa:cityid/3,pennsylvania:stateid/2],[virginia:stateid/2,usa:countryid/2],[pueblo_co:cityid/3,colorado:stateid/2],[pacific ocean:placeid/2,alaska:stateid/2],[ontario:lakeid/2,usa:countryid/2],[arizona:stateid/2,usa:countryid/2],[scranton_pa:cityid/3,usa:countryid/2],[albany_ny:cityid/3,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[tahoe:lakeid/2,nevada:stateid/2],[hunter:mountainid/2,usa:countryid/2],[corpus christi_tx:cityid/3,usa:countryid/2],[humphreys peak:placeid/2,usa:countryid/2],[atlanta_ga:cityid/3,usa:countryid/2],[west palm beach_fl:cityid/3,usa:countryid/2],[columbus_ga:cityid/3,georgia:stateid/2],[evansville_in:cityid/3,usa:countryid/2],[hudson:riverid/2,new jersey:stateid/2],[duluth_mn:cityid/3,usa:countryid/2],[newport news_va:cityid/3,usa:countryid/2],[princeton:mountainid/2,usa:countryid/2],[st. clair shores_mi:cityid/3,michigan:stateid/2],[huntsville_al:cityid/3,usa:countryid/2],[red:riverid/2,oklahoma:stateid/2],[nashville_tn:cityid/3,usa:countryid/2],[augusta_me:cityid/3,maine:stateid/2],[aurora_il:cityid/3,illinois:stateid/2],[scottsdale_az:cityid/3,arizona:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[snake river:placeid/2,usa:countryid/2],[new mexico:stateid/2,usa:countryid/2],[roswell_nm:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,new jersey:stateid/2],[bross:mountainid/2,usa:countryid/2],[tombigbee:riverid/2,usa:countryid/2],[amarillo_tx:cityid/3,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[norwalk_ca:cityid/3,california:stateid/2],[mobile_al:cityid/3,usa:countryid/2],[waterbury_ct:cityid/3,usa:countryid/2],[beaver dam creek:placeid/2,usa:countryid/2],[east los angeles_ca:cityid/3,california:stateid/2],[lewiston_me:cityid/3,maine:stateid/2],[iliamna:lakeid/2,alaska:stateid/2],[san angelo_tx:cityid/3,usa:countryid/2],[lake superior:placeid/2,usa:countryid/2],[santa ana_ca:cityid/3,usa:countryid/2],[illinois:stateid/2,usa:countryid/2],[santa barbara_ca:cityid/3,california:stateid/2],[nashville_tn:cityid/3,tennessee:stateid/2],[durham_nc:cityid/3,north carolina:stateid/2],[westland_mi:cityid/3,usa:countryid/2],[clifton_nj:cityid/3,usa:countryid/2],[terre haute_in:cityid/3,indiana:stateid/2],[bona:mountainid/2,alaska:stateid/2],[erie:lakeid/2,usa:countryid/2],[sanford:mountainid/2,usa:countryid/2],[cleveland_oh:cityid/3,ohio:stateid/2],[tallahassee_fl:cityid/3,usa:countryid/2],[downey_ca:cityid/3,usa:countryid/2],[ewa_hi:cityid/3,usa:countryid/2],[savannah_ga:cityid/3,georgia:stateid/2],[denver_co:cityid/3,usa:countryid/2],[wisconsin:stateid/2,usa:countryid/2],[potomac river:placeid/2,usa:countryid/2],[la plata:mountainid/2,usa:countryid/2],[pawtucket_ri:cityid/3,rhode island:stateid/2],[las cruces_nm:cityid/3,new mexico:stateid/2],[jacksonville_fl:cityid/3,florida:stateid/2],[mesa_az:cityid/3,usa:countryid/2],[inglewood_ca:cityid/3,usa:countryid/2],[powder:riverid/2,wyoming:stateid/2],[lewiston_me:cityid/3,usa:countryid/2],[jersey city_nj:cityid/3,usa:countryid/2],[wilmington_de:cityid/3,delaware:stateid/2],[redondo beach_ca:cityid/3,usa:countryid/2],[aberdeen_sd:cityid/3,usa:countryid/2],[allentown_pa:cityid/3,pennsylvania:stateid/2],[odessa_tx:cityid/3,usa:countryid/2],[decatur_il:cityid/3,illinois:stateid/2],[tennessee:stateid/2,usa:countryid/2],[wyoming_mi:cityid/3,michigan:stateid/2],[ohio river:placeid/2,ohio:stateid/2],[san juan:riverid/2,utah:stateid/2],[foraker:mountainid/2,alaska:stateid/2],[columbia_mo:cityid/3,usa:countryid/2],[livonia_mi:cityid/3,michigan:stateid/2],[ann arbor_mi:cityid/3,michigan:stateid/2],[warwick_ri:cityid/3,usa:countryid/2],[el monte_ca:cityid/3,usa:countryid/2],[rochester_ny:cityid/3,new york:stateid/2],[elizabeth_nj:cityid/3,usa:countryid/2],[winnebago:lakeid/2,usa:countryid/2],[tulsa_ok:cityid/3,usa:countryid/2],[rockford_il:cityid/3,illinois:stateid/2],[los angeles_ca:cityid/3,california:stateid/2],[el cajon_ca:cityid/3,california:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[grand forks_nd:cityid/3,north dakota:stateid/2],[dearborn heights_mi:cityid/3,usa:countryid/2],[lower merion_pa:cityid/3,pennsylvania:stateid/2],[columbia_mo:cityid/3,missouri:stateid/2],[st. louis_mo:cityid/3,missouri:stateid/2],[reading_pa:cityid/3,pennsylvania:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[waterford_mi:cityid/3,usa:countryid/2],[waterloo_ia:cityid/3,usa:countryid/2],[grand forks_nd:cityid/3,usa:countryid/2],[evans:mountainid/2,usa:countryid/2],[orlando_fl:cityid/3,usa:countryid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[west palm beach_fl:cityid/3,florida:stateid/2],[cambridge_ma:cityid/3,massachusetts:stateid/2],[carson city_nv:cityid/3,nevada:stateid/2],[hartford_ct:cityid/3,usa:countryid/2],[fort worth_tx:cityid/3,texas:stateid/2],[colorado springs_co:cityid/3,usa:countryid/2],[oklahoma:stateid/2,usa:countryid/2],[indianapolis_in:cityid/3,indiana:stateid/2],[largo_fl:cityid/3,florida:stateid/2],[harney peak:placeid/2,usa:countryid/2],[jefferson city_mo:cityid/3,missouri:stateid/2],[roanoke_va:cityid/3,virginia:stateid/2],[garden grove_ca:cityid/3,california:stateid/2],[gulf of mexico:placeid/2,usa:countryid/2],[wateree catawba:riverid/2,usa:countryid/2],[boise_id:cityid/3,idaho:stateid/2],[minot_nd:cityid/3,usa:countryid/2],[bloomington_mn:cityid/3,minnesota:stateid/2],[scotts valley_ca:cityid/3,usa:countryid/2],[aurora_co:cityid/3,colorado:stateid/2],[rock:riverid/2,wisconsin:stateid/2],[crestone needle:mountainid/2,colorado:stateid/2],[hunter:mountainid/2,alaska:stateid/2],[abingdon_pa:cityid/3,usa:countryid/2],[sill:mountainid/2,usa:countryid/2],[rainier:mountainid/2,washington:stateid/2],[gannett peak:placeid/2,wyoming:stateid/2],[georgetown_dc:cityid/3,district of columbia:stateid/2],[virginia beach_va:cityid/3,virginia:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:stateid/2,usa:countryid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[michigan:lakeid/2,michigan:stateid/2],[montana:stateid/2,usa:countryid/2],[medford_ma:cityid/3,usa:countryid/2],[oakland_ca:cityid/3,usa:countryid/2],[albuquerque_nm:cityid/3,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[dundalk_md:cityid/3,maryland:stateid/2],[utica_ny:cityid/3,new york:stateid/2],[albany_ny:cityid/3,new york:stateid/2],[belford:mountainid/2,usa:countryid/2],[lubbock_tx:cityid/3,texas:stateid/2],[elgin_il:cityid/3,usa:countryid/2],[amarillo_tx:cityid/3,texas:stateid/2],[houston_tx:cityid/3,texas:stateid/2],[elgin_il:cityid/3,illinois:stateid/2],[timms hill:placeid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mount marcy:placeid/2,usa:countryid/2],[la plata:mountainid/2,colorado:stateid/2],[hartford_ct:cityid/3,connecticut:stateid/2],[skokie_il:cityid/3,usa:countryid/2],[laramie_wy:cityid/3,usa:countryid/2],[joliet_il:cityid/3,usa:countryid/2],[cheaha mountain:placeid/2,alabama:stateid/2],[tenleytown:placeid/2,district of columbia:stateid/2],[springfield_il:cityid/3,illinois:stateid/2],[fresno_ca:cityid/3,usa:countryid/2],[naknek:lakeid/2,alaska:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[san bernardino_ca:cityid/3,usa:countryid/2],[hollywood_fl:cityid/3,florida:stateid/2],[bethlehem_pa:cityid/3,pennsylvania:stateid/2],[san antonio_tx:cityid/3,usa:countryid/2],[parkersburg_wv:cityid/3,usa:countryid/2],[hubbard:mountainid/2,alaska:stateid/2],[newark_de:cityid/3,usa:countryid/2],[grays:mountainid/2,usa:countryid/2],[chicago_il:cityid/3,usa:countryid/2],[brownsville_tx:cityid/3,usa:countryid/2],[mount rogers:placeid/2,virginia:stateid/2],[new rochelle_ny:cityid/3,new york:stateid/2],[lakewood_co:cityid/3,usa:countryid/2],[newport beach_ca:cityid/3,california:stateid/2],[providence_ri:cityid/3,rhode island:stateid/2],[des moines_ia:cityid/3,iowa:stateid/2],[santa rosa_ca:cityid/3,california:stateid/2],[ontario:lakeid/2,new york:stateid/2],[mississippi river:placeid/2,usa:countryid/2],[franklin township:placeid/2,usa:countryid/2],[bakersfield_ca:cityid/3,usa:countryid/2],[greensboro_nc:cityid/3,north carolina:stateid/2],[colorado river:placeid/2,arizona:stateid/2],[great salt lake:lakeid/2,usa:countryid/2],[rhode island:stateid/2,usa:countryid/2],[arkansas:riverid/2,kansas:stateid/2],[brownsville_tx:cityid/3,texas:stateid/2],[fort collins_co:cityid/3,usa:countryid/2],[richmond_ca:cityid/3,usa:countryid/2],[penn hills_pa:cityid/3,usa:countryid/2],[virginia beach_va:cityid/3,usa:countryid/2],[louisiana:stateid/2,usa:countryid/2],[mount davis:placeid/2,pennsylvania:stateid/2],[shasta:mountainid/2,usa:countryid/2],[rochester_ny:cityid/3,usa:countryid/2],[nevada:stateid/2,usa:countryid/2],[gary_in:cityid/3,indiana:stateid/2],[colorado river:placeid/2,nevada:stateid/2],[castle:mountainid/2,usa:countryid/2],[death valley:placeid/2,usa:countryid/2],[roanoke_va:cityid/3,usa:countryid/2],[oxnard_ca:cityid/3,california:stateid/2],[snake:riverid/2,idaho:stateid/2],[oceanside_ca:cityid/3,california:stateid/2],[north platte_ne:cityid/3,usa:countryid/2],[colorado:riverid/2,utah:stateid/2],[pasadena_tx:cityid/3,texas:stateid/2],[mount mckinley:placeid/2,usa:countryid/2],[ouachita river:placeid/2,usa:countryid/2],[south bend_in:cityid/3,indiana:stateid/2],[westland_mi:cityid/3,michigan:stateid/2],[baltimore_md:cityid/3,maryland:stateid/2],[aurora_il:cityid/3,usa:countryid/2],[woodall mountain:placeid/2,usa:countryid/2],[irving_tx:cityid/3,usa:countryid/2],[schenectady_ny:cityid/3,usa:countryid/2],[elizabeth_nj:cityid/3,new jersey:stateid/2],[longview_tx:cityid/3,usa:countryid/2],[ohio:riverid/2,illinois:stateid/2],[missoula_mt:cityid/3,montana:stateid/2],[spruce knob:placeid/2,usa:countryid/2],[west virginia:stateid/2,usa:countryid/2],[cheektowaga_ny:cityid/3,usa:countryid/2],[pecos:riverid/2,usa:countryid/2],[gulf of mexico:placeid/2,alabama:stateid/2],[oregon:stateid/2,usa:countryid/2],[pawtucket_ri:cityid/3,usa:countryid/2],[grays:mountainid/2,colorado:stateid/2],[backbone mountain:placeid/2,usa:countryid/2],[houston_tx:cityid/3,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[redford_mi:cityid/3,usa:countryid/2],[oklahoma city_ok:cityid/3,usa:countryid/2],[driskill mountain:placeid/2,usa:countryid/2],[new orleans_la:cityid/3,louisiana:stateid/2],[huntington beach_ca:cityid/3,california:stateid/2],[becharof:lakeid/2,alaska:stateid/2],[monroe_la:cityid/3,louisiana:stateid/2],[lafayette_la:cityid/3,louisiana:stateid/2],[west hartford_ct:cityid/3,connecticut:stateid/2],[sunnyvale_ca:cityid/3,usa:countryid/2],[santa clara_ca:cityid/3,california:stateid/2],[sterling heights_mi:cityid/3,usa:countryid/2],[ohio river:placeid/2,usa:countryid/2],[appleton_wi:cityid/3,wisconsin:stateid/2],[fullerton_ca:cityid/3,california:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[lakewood_oh:cityid/3,ohio:stateid/2],[yellowstone:riverid/2,wyoming:stateid/2],[chattanooga_tn:cityid/3,usa:countryid/2],[essex_vt:cityid/3,usa:countryid/2],[whitney:mountainid/2,california:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[wheeling_wv:cityid/3,usa:countryid/2],[dundalk_md:cityid/3,usa:countryid/2],[redondo beach_ca:cityid/3,california:stateid/2],[san francisco_ca:cityid/3,usa:countryid/2],[johnson township:placeid/2,usa:countryid/2],[lake of the woods:lakeid/2,usa:countryid/2],[santa clara_ca:cityid/3,usa:countryid/2],[mount frissell:placeid/2,connecticut:stateid/2],[lorain_oh:cityid/3,ohio:stateid/2],[st. elias:mountainid/2,usa:countryid/2],[mount whitney:placeid/2,california:stateid/2],[mountain view_ca:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,new jersey:stateid/2],[midland_tx:cityid/3,usa:countryid/2],[kansas city_mo:cityid/3,usa:countryid/2],[lake michigan:placeid/2,wisconsin:stateid/2],[richmond_va:cityid/3,usa:countryid/2],[arlington_va:cityid/3,virginia:stateid/2],[wichita_ks:cityid/3,usa:countryid/2],[tacoma_wa:cityid/3,usa:countryid/2],[pensacola_fl:cityid/3,usa:countryid/2],[colorado river:placeid/2,usa:countryid/2],[salinas_ca:cityid/3,usa:countryid/2],[upper darby_pa:cityid/3,pennsylvania:stateid/2],[gary_in:cityid/3,usa:countryid/2],[milwaukee_wi:cityid/3,usa:countryid/2],[waltham_ma:cityid/3,massachusetts:stateid/2],[salton sea:lakeid/2,california:stateid/2],[edison_nj:cityid/3,usa:countryid/2],[massachusetts:stateid/2,usa:countryid/2],[anaheim_ca:cityid/3,usa:countryid/2],[jerimoth hill:placeid/2,rhode island:stateid/2],[arkansas:stateid/2,usa:countryid/2],[charlotte_nc:cityid/3,north carolina:stateid/2],[irvington_nj:cityid/3,new jersey:stateid/2],[lake charles_la:cityid/3,usa:countryid/2],[bethesda_md:cityid/3,maryland:stateid/2],[irving_tx:cityid/3,texas:stateid/2],[flint_mi:cityid/3,michigan:stateid/2],[bona:mountainid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[yale:mountainid/2,usa:countryid/2],[worcester_ma:cityid/3,massachusetts:stateid/2],[midland_tx:cityid/3,texas:stateid/2],[scottsdale_az:cityid/3,usa:countryid/2],[fall river_ma:cityid/3,usa:countryid/2],[pittsburgh_pa:cityid/3,usa:countryid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[st. francis river:placeid/2,missouri:stateid/2],[north charleston_sc:cityid/3,usa:countryid/2],[mille lacs:lakeid/2,usa:countryid/2],[ouachita:riverid/2,usa:countryid/2],[minneapolis_mn:cityid/3,minnesota:stateid/2],[covington_ky:cityid/3,usa:countryid/2],[bakersfield_ca:cityid/3,california:stateid/2],[columbia_sc:cityid/3,usa:countryid/2],[black mountain:placeid/2,usa:countryid/2],[south dakota:stateid/2,usa:countryid/2],[whittier_ca:cityid/3,usa:countryid/2],[wahiawa_hi:cityid/3,usa:countryid/2],[auburn_me:cityid/3,maine:stateid/2],[taum sauk mountain:placeid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[jerimoth hill:placeid/2,usa:countryid/2],[mount elbert:placeid/2,colorado:stateid/2],[orange_ca:cityid/3,usa:countryid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[lincoln_ne:cityid/3,usa:countryid/2],[odessa_tx:cityid/3,texas:stateid/2],[white:riverid/2,missouri:stateid/2],[ontario_ca:cityid/3,california:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[whittier_ca:cityid/3,california:stateid/2],[garland_tx:cityid/3,usa:countryid/2],[brookside_de:cityid/3,delaware:stateid/2],[alameda_ca:cityid/3,usa:countryid/2],[kansas city_ks:cityid/3,kansas:stateid/2],[rutland_vt:cityid/3,usa:countryid/2],[ouachita:riverid/2,arkansas:stateid/2],[atlantic ocean:placeid/2,maine:stateid/2],[long beach_ca:cityid/3,california:stateid/2],[colorado springs_co:cityid/3,colorado:stateid/2],[manchester_nh:cityid/3,new hampshire:stateid/2],[pomona_ca:cityid/3,usa:countryid/2],[mount mitchell:placeid/2,usa:countryid/2],[fairweather:mountainid/2,alaska:stateid/2],[owensboro_ky:cityid/3,kentucky:stateid/2],[potomac river:placeid/2,west virginia:stateid/2],[jersey city_nj:cityid/3,new jersey:stateid/2],[crestone needle:mountainid/2,usa:countryid/2],[pasadena_ca:cityid/3,usa:countryid/2],[alverstone:mountainid/2,alaska:stateid/2],[springfield_mo:cityid/3,missouri:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[delaware:stateid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[westminster_ca:cityid/3,california:stateid/2],[kansas city_ks:cityid/3,usa:countryid/2],[clearwater_fl:cityid/3,usa:countryid/2],[orlando_fl:cityid/3,florida:stateid/2],[texas:stateid/2,usa:countryid/2],[corpus christi_tx:cityid/3,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[elbert:mountainid/2,colorado:stateid/2],[cheyenne:riverid/2,north dakota:stateid/2],[oklahoma city_ok:cityid/3,oklahoma:stateid/2],[sioux falls_sd:cityid/3,usa:countryid/2],[tenleytown_dc:cityid/3,usa:countryid/2],[district of columbia:stateid/2,usa:countryid/2]}:{[placeid/2,countryid/2],[placeid/2,stateid/2],[cityid/3,countryid/2],[riverid/2,stateid/2],[placeid/2,cityid/3],[mountainid/2,countryid/2],[stateid/2,countryid/2],[lakeid/2,countryid/2],[mountainid/2,stateid/2],[cityid/3,stateid/2],[riverid/2,countryid/2],[lakeid/2,stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),state(B),loc(C,B),const(C,stateid(texas))))
        Example tmp83nzzasm.dlog:345: query => {[utah:stateid/2],[mississippi:stateid/2],[colorado:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmp83nzzasm.dlog:346: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmp83nzzasm.dlog:347: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:348: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:349: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))
        Example tmp83nzzasm.dlog:350: query => {[2667length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp83nzzasm.dlog:351: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:352: query => {[5count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmp83nzzasm.dlog:353: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:354: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp83nzzasm.dlog:355: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:356: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmp83nzzasm.dlog:357: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:358: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:359: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:360: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:361: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,washita:riverid/2],[texas,texas:stateid/2,texas:stateid/2,irving_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mesquite_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,corpus christi_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,grand prairie_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,red:riverid/2],[texas,texas:stateid/2,texas:stateid/2,arlington_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,beaumont_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,brownsville_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,longview_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,waco_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,guadalupe peak:placeid/2],[texas,texas:stateid/2,texas:stateid/2,lubbock_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,gulf of mexico:placeid/2],[texas,texas:stateid/2,texas:stateid/2,pasadena_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,dallas_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,fort worth_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,el paso_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,odessa_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,port arthur_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,canadian:riverid/2],[texas,texas:stateid/2,texas:stateid/2,richardson_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,abilene_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,laredo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,tyler_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,garland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,wichita falls_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,pecos:riverid/2],[texas,texas:stateid/2,texas:stateid/2,midland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,plano_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,austin_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,amarillo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mcallen_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,san angelo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,houston_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,rio grande:riverid/2],[texas,texas:stateid/2,texas:stateid/2,san antonio_tx:cityid/3]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(capital(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp83nzzasm.dlog:362: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp83nzzasm.dlog:363: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,washita:riverid/2],[texas,texas:stateid/2,texas:stateid/2,irving_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mesquite_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,corpus christi_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,grand prairie_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,red:riverid/2],[texas,texas:stateid/2,texas:stateid/2,arlington_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,beaumont_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,brownsville_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,longview_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,waco_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,guadalupe peak:placeid/2],[texas,texas:stateid/2,texas:stateid/2,lubbock_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,gulf of mexico:placeid/2],[texas,texas:stateid/2,texas:stateid/2,pasadena_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,dallas_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,fort worth_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,el paso_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,odessa_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,port arthur_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,canadian:riverid/2],[texas,texas:stateid/2,texas:stateid/2,richardson_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,abilene_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,laredo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,tyler_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,garland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,wichita falls_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,pecos:riverid/2],[texas,texas:stateid/2,texas:stateid/2,midland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,plano_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,austin_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,amarillo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mcallen_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,san angelo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,houston_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,rio grande:riverid/2],[texas,texas:stateid/2,texas:stateid/2,san antonio_tx:cityid/3]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(capital(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp83nzzasm.dlog:364: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:365: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,place(B))))
        Example tmp83nzzasm.dlog:366: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:367: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp83nzzasm.dlog:368: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:369: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,count(B,(state(B),loc(C,B),const(C,stateid(texas))),A))
        Example tmp83nzzasm.dlog:370: query => {[utah:stateid/2],[mississippi:stateid/2],[colorado:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[kansas:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmp83nzzasm.dlog:371: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example tmp83nzzasm.dlog:372: query => {[louisiana:stateid/2]} | answer(A,largest(B,(population(A,B),state(A),next_to(A,C),const(C,stateid(texas)))))
        Example tmp83nzzasm.dlog:373: query => {[Join failed syntactically: {[mississippi:riverid/2,3778000length]}:{[riverid/2,length]}[0,1] and {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[0,1] => {}:error]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example tmp83nzzasm.dlog:374: query => {[Join failed syntactically: {[4396length,massive:mountainid/2],[4354length,lincoln:mountainid/2],[1516length,black mesa:placeid/2],[4342length,white:mountainid/2],[1482length,spruce knob:placeid/2],[177length,lake michigan:placeid/2],[1231length,mount sunflower:placeid/2],[4399length,mount elbert:placeid/2],[105length,walton county:placeid/2],[2037length,mount mitchell:placeid/2],[216length,snake river:placeid/2],[21length,colorado river:placeid/2],[4341length,north palisade:mountainid/2],[6194length,mount mckinley:placeid/2],[2025length,clingmans dome:placeid/2],[4370length,la plata:mountainid/2],[3424length,mount hood:placeid/2],[4349length,grays:mountainid/2],[0length,potomac river:placeid/2],[4327length,yale:mountainid/2],[87length,little river:placeid/2],[4439length,alverstone:mountainid/2],[2667length,guadalupe peak:placeid/2],[1917length,mount washington:placeid/2],[1746length,mount rogers:placeid/2],[595length,timms hill:placeid/2],[4317length,sill:mountainid/2],[383length,franklin township:placeid/2],[0length,atlantic ocean:placeid/2],[-85length,death valley:placeid/2],[4996length,blackburn:mountainid/2],[1606length,mount katahdin:placeid/2],[125length,tenleytown:placeid/2],[1024length,backbone mountain:placeid/2],[1263length,black mountain:placeid/2],[1339length,mount mansfield:placeid/2],[549length,kootenai river:placeid/2],[2207length,harney peak:placeid/2],[4327length,princeton:mountainid/2],[0length,delaware river:placeid/2],[4766length,churchill:mountainid/2],[1085length,sassafras mountain:placeid/2],[4418length,whitney:mountainid/2],[725length,mount frissell:placeid/2],[610length,beaver dam creek:placeid/2],[229length,red river:placeid/2],[85length,mississippi river:placeid/2],[4316length,el diente:mountainid/2],[550length,high point:placeid/2],[132length,ohio river:placeid/2],[4348length,quandary:mountainid/2],[4345length,longs:mountainid/2],[183length,lake superior:placeid/2],[4395length,harvard:mountainid/2],[4123length,kings peak:placeid/2],[4327length,belford:mountainid/2],[4442length,hunter:mountainid/2],[1654length,johnson township:placeid/2],[4320length,bross:mountainid/2],[98length,ohio river:placeid/2],[4392length,rainier:mountainid/2],[4205length,mauna kea:placeid/2],[3859length,borah peak:placeid/2],[1064length,mount greylock:placeid/2],[4317length,wrangell:mountainid/2],[4577length,hubbard:mountainid/2],[4361length,uncompahgre:mountainid/2],[163length,driskill mountain:placeid/2],[55length,mississippi river:placeid/2],[1629length,mount marcy:placeid/2],[5489length,st. elias:mountainid/2],[4418length,mount whitney:placeid/2],[4317length,shasta:mountainid/2],[-1length,new orleans:placeid/2],[4349length,torreys:mountainid/2],[4372length,bianca:mountainid/2],[4357length,crestone:mountainid/2],[0length,pacific ocean:placeid/2],[6194length,mckinley:mountainid/2],[135length,centerville:placeid/2],[1458length,brasstown bald:placeid/2],[945length,belle fourche river:placeid/2],[4005length,boundary peak:placeid/2],[859length,red bluff reservoir:placeid/2],[4315length,maroon:mountainid/2],[17length,ouachita river:placeid/2],[979length,mount davis:placeid/2],[256length,southeast corner:placeid/2],[78length,mississippi river:placeid/2],[701length,eagle mountain:placeid/2],[472length,campbell hill:placeid/2],[4842length,south buttress:mountainid/2],[4337length,shavano:mountainid/2],[511length,ocheyedan mound:placeid/2],[0length,gulf of mexico:placeid/2],[4348length,evans:mountainid/2],[4011length,wheeler peak:placeid/2],[73length,potomac river:placeid/2],[5304length,foraker:mountainid/2],[29length,lake champlain:placeid/2],[207length,verdigris river:placeid/2],[3901length,granite peak:placeid/2],[246length,woodall mountain:placeid/2],[146length,mississippi river:placeid/2],[4317length,kit carson:mountainid/2],[734length,cheaha mountain:placeid/2],[5044length,bona:mountainid/2],[70length,st. francis river:placeid/2],[282length,mount davidson:placeid/2],[174length,lake erie:placeid/2],[604length,mount curwood:placeid/2],[1069length,white butte:placeid/2],[3851length,humphreys peak:placeid/2],[4490length,east buttress:mountainid/2],[4342length,wilson:mountainid/2],[247length,jerimoth hill:placeid/2],[4964length,kennedy:mountainid/2],[143length,colorado river:placeid/2],[4392length,mount rainier:placeid/2],[4785length,vancouver:mountainid/2],[540length,taum sauk mountain:placeid/2],[4349length,antero:mountainid/2],[284length,big stone lake:placeid/2],[4327length,crestone needle:mountainid/2],[376length,charles mound:placeid/2],[4399length,elbert:mountainid/2],[0length,long island sound:placeid/2],[4429length,browne tower:mountainid/2],[4202length,gannett peak:placeid/2],[839length,magazine mountain:placeid/2],[1021length,arkansas river:placeid/2],[4382length,williamson:mountainid/2],[4949length,sanford:mountainid/2],[4663length,fairweather:mountainid/2],[4348length,castle:mountainid/2],[4520length,bear:mountainid/2]}:{[length,mountainid/2],[length,placeid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[2] => {}:error]} | answer(A,(elevation(B,A),const(B,cityid('san jose',_))))
        Example tmp83nzzasm.dlog:375: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp83nzzasm.dlog:376: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:377: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:378: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:379: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:380: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:381: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:382: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:383: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:384: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:385: query => {[district of columbia:stateid/2]} | answer(A,smallest(A,state(A)))
        Example tmp83nzzasm.dlog:386: query => {[5count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(texas))),A))
        Example tmp83nzzasm.dlog:387: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:388: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:389: query => {[lawton_ok:cityid/3],[monroe_la:cityid/3],[fort smith_ar:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[lafayette_la:cityid/3],[norman_ok:cityid/3],[kenner_la:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmp83nzzasm.dlog:390: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:391: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmp83nzzasm.dlog:392: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp83nzzasm.dlog:393: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:394: query => {[2364000count],[4206000count],[4916000count],[2286000count],[4700000count],[2913000count],[2520000count],[4076000count],[4591000count],[11400000count]} | answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp83nzzasm.dlog:395: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:396: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:397: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,washita:riverid/2],[texas,texas:stateid/2,texas:stateid/2,irving_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mesquite_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,corpus christi_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,grand prairie_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,red:riverid/2],[texas,texas:stateid/2,texas:stateid/2,arlington_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,beaumont_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,brownsville_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,longview_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,waco_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,guadalupe peak:placeid/2],[texas,texas:stateid/2,texas:stateid/2,lubbock_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,gulf of mexico:placeid/2],[texas,texas:stateid/2,texas:stateid/2,pasadena_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,dallas_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,fort worth_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,el paso_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,odessa_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,port arthur_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,canadian:riverid/2],[texas,texas:stateid/2,texas:stateid/2,richardson_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,abilene_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,laredo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,tyler_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,garland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,wichita falls_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,pecos:riverid/2],[texas,texas:stateid/2,texas:stateid/2,midland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,plano_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,austin_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,amarillo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mcallen_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,san angelo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,houston_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,rio grande:riverid/2],[texas,texas:stateid/2,texas:stateid/2,san antonio_tx:cityid/3]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,largest(A,(city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas)))))))
        Example tmp83nzzasm.dlog:398: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:399: query => {[345496count]} | answer(A,(size(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:400: query => {[louisiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:401: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmp83nzzasm.dlog:402: query => {[Join failed syntactically: {[kentucky:stateid/2,cumberland:riverid/2],[kansas:stateid/2,cimarron:riverid/2],[north dakota:stateid/2,missouri:riverid/2],[arkansas:stateid/2,white:riverid/2],[utah:stateid/2,san juan:riverid/2],[colorado:stateid/2,north platte:riverid/2],[louisiana:stateid/2,ouachita:riverid/2],[vermont:stateid/2,connecticut:riverid/2],[arkansas:stateid/2,mississippi:riverid/2],[arizona:stateid/2,colorado:riverid/2],[illinois:stateid/2,mississippi:riverid/2],[district of columbia:stateid/2,potomac:riverid/2],[missouri:stateid/2,st. francis:riverid/2],[new mexico:stateid/2,rio grande:riverid/2],[indiana:stateid/2,ohio:riverid/2],[new mexico:stateid/2,cimarron:riverid/2],[ohio:stateid/2,wabash:riverid/2],[tennessee:stateid/2,cumberland:riverid/2],[pennsylvania:stateid/2,allegheny:riverid/2],[nebraska:stateid/2,missouri:riverid/2],[wyoming:stateid/2,north platte:riverid/2],[nebraska:stateid/2,south platte:riverid/2],[wyoming:stateid/2,little missouri:riverid/2],[missouri:stateid/2,missouri:riverid/2],[new jersey:stateid/2,delaware:riverid/2],[alabama:stateid/2,tennessee:riverid/2],[connecticut:stateid/2,connecticut:riverid/2],[montana:stateid/2,yellowstone:riverid/2],[montana:stateid/2,powder:riverid/2],[nevada:stateid/2,colorado:riverid/2],[oregon:stateid/2,columbia:riverid/2],[texas:stateid/2,red:riverid/2],[north dakota:stateid/2,little missouri:riverid/2],[alabama:stateid/2,tombigbee:riverid/2],[kentucky:stateid/2,ohio:riverid/2],[montana:stateid/2,clark fork:riverid/2],[texas:stateid/2,rio grande:riverid/2],[tennessee:stateid/2,tennessee:riverid/2],[colorado:stateid/2,rio grande:riverid/2],[colorado:stateid/2,colorado:riverid/2],[arkansas:stateid/2,red:riverid/2],[oklahoma:stateid/2,canadian:riverid/2],[colorado:stateid/2,smoky hill:riverid/2],[illinois:stateid/2,ohio:riverid/2],[louisiana:stateid/2,mississippi:riverid/2],[new mexico:stateid/2,red:riverid/2],[arizona:stateid/2,gila:riverid/2],[oklahoma:stateid/2,red:riverid/2],[south dakota:stateid/2,little missouri:riverid/2],[washington:stateid/2,snake:riverid/2],[wisconsin:stateid/2,mississippi:riverid/2],[indiana:stateid/2,wabash:riverid/2],[north carolina:stateid/2,roanoke:riverid/2],[maryland:stateid/2,potomac:riverid/2],[texas:stateid/2,washita:riverid/2],[colorado:stateid/2,republican:riverid/2],[delaware:stateid/2,delaware:riverid/2],[north dakota:stateid/2,cheyenne:riverid/2],[oklahoma:stateid/2,washita:riverid/2],[kentucky:stateid/2,tennessee:riverid/2],[wisconsin:stateid/2,rock:riverid/2],[colorado:stateid/2,green:riverid/2],[idaho:stateid/2,snake:riverid/2],[colorado:stateid/2,south platte:riverid/2],[michigan:stateid/2,pearl:riverid/2],[new mexico:stateid/2,san juan:riverid/2],[north dakota:stateid/2,yellowstone:riverid/2],[new hampshire:stateid/2,connecticut:riverid/2],[utah:stateid/2,green:riverid/2],[louisiana:stateid/2,red:riverid/2],[iowa:stateid/2,mississippi:riverid/2],[arkansas:stateid/2,arkansas:riverid/2],[colorado:stateid/2,arkansas:riverid/2],[north dakota:stateid/2,dakota:riverid/2],[minnesota:stateid/2,mississippi:riverid/2],[missouri:stateid/2,white:riverid/2],[california:stateid/2,colorado:riverid/2],[oklahoma:stateid/2,arkansas:riverid/2],[arkansas:stateid/2,st. francis:riverid/2],[iowa:stateid/2,missouri:riverid/2],[pennsylvania:stateid/2,ohio:riverid/2],[mississippi:stateid/2,tombigbee:riverid/2],[new york:stateid/2,hudson:riverid/2],[new york:stateid/2,allegheny:riverid/2],[oklahoma:stateid/2,cimarron:riverid/2],[wyoming:stateid/2,niobrara:riverid/2],[tennessee:stateid/2,mississippi:riverid/2],[west virginia:stateid/2,potomac:riverid/2],[virginia:stateid/2,roanoke:riverid/2],[wyoming:stateid/2,bighorn:riverid/2],[kansas:stateid/2,arkansas:riverid/2],[arkansas:stateid/2,ouachita:riverid/2],[idaho:stateid/2,clark fork:riverid/2],[utah:stateid/2,colorado:riverid/2],[south carolina:stateid/2,wateree catawba:riverid/2],[texas:stateid/2,canadian:riverid/2],[mississippi:stateid/2,mississippi:riverid/2],[colorado:stateid/2,canadian:riverid/2],[virginia:stateid/2,potomac:riverid/2],[nebraska:stateid/2,north platte:riverid/2],[wyoming:stateid/2,green:riverid/2],[pennsylvania:stateid/2,delaware:riverid/2],[new mexico:stateid/2,pecos:riverid/2],[missouri:stateid/2,mississippi:riverid/2],[oklahoma:stateid/2,neosho:riverid/2],[montana:stateid/2,bighorn:riverid/2],[wyoming:stateid/2,yellowstone:riverid/2],[wyoming:stateid/2,snake:riverid/2],[south dakota:stateid/2,dakota:riverid/2],[new mexico:stateid/2,gila:riverid/2],[montana:stateid/2,missouri:riverid/2],[new york:stateid/2,delaware:riverid/2],[wyoming:stateid/2,powder:riverid/2],[kansas:stateid/2,smoky hill:riverid/2],[washington:stateid/2,columbia:riverid/2],[new mexico:stateid/2,canadian:riverid/2],[new jersey:stateid/2,hudson:riverid/2],[west virginia:stateid/2,ohio:riverid/2],[nebraska:stateid/2,republican:riverid/2],[georgia:stateid/2,chattahoochee:riverid/2],[kentucky:stateid/2,mississippi:riverid/2],[colorado:stateid/2,san juan:riverid/2],[texas:stateid/2,pecos:riverid/2],[illinois:stateid/2,wabash:riverid/2],[montana:stateid/2,little missouri:riverid/2],[ohio:stateid/2,ohio:riverid/2],[nebraska:stateid/2,niobrara:riverid/2],[illinois:stateid/2,rock:riverid/2],[kansas:stateid/2,neosho:riverid/2],[massachusetts:stateid/2,connecticut:riverid/2],[south dakota:stateid/2,missouri:riverid/2],[north carolina:stateid/2,wateree catawba:riverid/2],[kansas:stateid/2,republican:riverid/2],[louisiana:stateid/2,pearl:riverid/2],[wyoming:stateid/2,cheyenne:riverid/2],[oregon:stateid/2,snake:riverid/2],[florida:stateid/2,chattahoochee:riverid/2]}:{[stateid/2,riverid/2]}[1] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,largest(A,(state(A),loc(B,A),state(A),next_to(A,B),state(B))))
        Example tmp83nzzasm.dlog:403: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:404: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:405: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:406: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmp83nzzasm.dlog:407: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:408: query => {[401800count]} | answer(A,(population(B,A),smallest(C,(state(B),population(B,C)))))
        Example tmp83nzzasm.dlog:409: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:410: query => {[12count]} | answer(A,count(B,(state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))),A))
        Example tmp83nzzasm.dlog:411: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:412: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example FAILED TO EXECUTE
        Example tmp83nzzasm.dlog:414: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:415: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:416: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:417: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:418: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp83nzzasm.dlog:419: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:420: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp83nzzasm.dlog:421: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:422: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:423: query => {[4count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))
        Example tmp83nzzasm.dlog:424: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:425: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:426: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:427: query => {[3778000length]} | answer(A,(len(B,A),most(B,C,(river(B),traverse(B,C),state(C)))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:428: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp83nzzasm.dlog:429: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:430: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example tmp83nzzasm.dlog:431: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:432: query => {[gila:riverid/2],[washita:riverid/2],[pecos:riverid/2],[arkansas:riverid/2],[cimarron:riverid/2],[white:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[canadian:riverid/2],[red:riverid/2],[neosho:riverid/2],[ouachita:riverid/2],[san juan:riverid/2],[st. francis:riverid/2]} | answer(A,(river(A),traverse(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmp83nzzasm.dlog:433: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:434: query => {[port arthur_tx:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:435: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmp83nzzasm.dlog:436: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:437: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:438: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(austin,_)),capital(B),loc(B,A)))
        Example tmp83nzzasm.dlog:439: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),state(B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:440: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmp83nzzasm.dlog:441: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:442: query => {[rio grande:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:443: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:444: query => {[Join failed syntactically: {[texas,texas:stateid/2,texas:stateid/2,washita:riverid/2],[texas,texas:stateid/2,texas:stateid/2,irving_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mesquite_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,corpus christi_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,grand prairie_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,red:riverid/2],[texas,texas:stateid/2,texas:stateid/2,arlington_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,beaumont_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,brownsville_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,longview_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,waco_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,guadalupe peak:placeid/2],[texas,texas:stateid/2,texas:stateid/2,lubbock_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,gulf of mexico:placeid/2],[texas,texas:stateid/2,texas:stateid/2,pasadena_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,dallas_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,fort worth_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,el paso_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,odessa_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,port arthur_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,canadian:riverid/2],[texas,texas:stateid/2,texas:stateid/2,richardson_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,abilene_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,laredo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,tyler_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,garland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,wichita falls_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,pecos:riverid/2],[texas,texas:stateid/2,texas:stateid/2,midland_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,plano_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,austin_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,amarillo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,mcallen_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,san angelo_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,houston_tx:cityid/3],[texas,texas:stateid/2,texas:stateid/2,rio grande:riverid/2],[texas,texas:stateid/2,texas:stateid/2,san antonio_tx:cityid/3]}:{[rank,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,lakeid/2],[money/time_duration,stateid/2,stateid/2,placeid/2],[name,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,riverid/2],[length,stateid/2,stateid/2,cityid/3],[date,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,mountainid/2],[count,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,mountainid/2],[money/time_duration,stateid/2,stateid/2,cityid/3],[date_month,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,placeid/2],[time_duration,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,riverid/2],[count/length^2,stateid/2,stateid/2,lakeid/2],[date_year,stateid/2,stateid/2,placeid/2],[frac,stateid/2,stateid/2,mountainid/2],[count/length^2,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,riverid/2],[date,stateid/2,stateid/2,cityid/3],[length^2,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,placeid/2],[length,stateid/2,stateid/2,placeid/2],[date_month,stateid/2,stateid/2,mountainid/2],[rank,stateid/2,stateid/2,riverid/2],[time_duration,stateid/2,stateid/2,cityid/3],[count,stateid/2,stateid/2,cityid/3],[rank,stateid/2,stateid/2,cityid/3],[money/time_duration,stateid/2,stateid/2,riverid/2],[date_day,stateid/2,stateid/2,cityid/3],[name,stateid/2,stateid/2,cityid/3],[frac,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,mountainid/2],[date_year,stateid/2,stateid/2,lakeid/2],[count,stateid/2,stateid/2,placeid/2],[money,stateid/2,stateid/2,riverid/2],[rank,stateid/2,stateid/2,lakeid/2],[frac,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,placeid/2],[count/length^2,stateid/2,stateid/2,mountainid/2],[date_month,stateid/2,stateid/2,riverid/2],[count,stateid/2,stateid/2,lakeid/2],[money,stateid/2,stateid/2,placeid/2],[date_year,stateid/2,stateid/2,mountainid/2],[length^2,stateid/2,stateid/2,cityid/3],[date_day,stateid/2,stateid/2,mountainid/2],[length,stateid/2,stateid/2,lakeid/2],[length,stateid/2,stateid/2,riverid/2],[date_time,stateid/2,stateid/2,cityid/3],[date_time,stateid/2,stateid/2,placeid/2],[length^2,stateid/2,stateid/2,lakeid/2],[date_time,stateid/2,stateid/2,lakeid/2],[date_day,stateid/2,stateid/2,riverid/2],[frac,stateid/2,stateid/2,lakeid/2],[name,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,placeid/2],[money/time_duration,stateid/2,stateid/2,lakeid/2],[length^2,stateid/2,stateid/2,placeid/2],[rank,stateid/2,stateid/2,mountainid/2],[date_day,stateid/2,stateid/2,lakeid/2],[date,stateid/2,stateid/2,mountainid/2],[time_duration,stateid/2,stateid/2,riverid/2],[money,stateid/2,stateid/2,lakeid/2],[count/length^2,stateid/2,stateid/2,placeid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,largest(A,(city(A),loc(A,B),largest(B,(state(B),loc(B,C),const(C,stateid(texas)))))))
        Example tmp83nzzasm.dlog:445: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:446: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:447: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:448: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:449: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:450: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:451: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmp83nzzasm.dlog:452: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(texas))))))
        Example tmp83nzzasm.dlog:453: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:454: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:455: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:456: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp83nzzasm.dlog:457: query => {[california:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('san jose',_))))
        Example tmp83nzzasm.dlog:458: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),largest(B,state(B)))))
        Example tmp83nzzasm.dlog:459: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmp83nzzasm.dlog:460: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp83nzzasm.dlog:461: query => {[new york_ny:cityid/3]} | answer(A,largest(B,(city(A),population(A,B))))
        Example tmp83nzzasm.dlog:462: query => {[2.06e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:463: query => {[Join failed syntactically: {[4396length,massive:mountainid/2],[4354length,lincoln:mountainid/2],[1516length,black mesa:placeid/2],[4342length,white:mountainid/2],[1482length,spruce knob:placeid/2],[177length,lake michigan:placeid/2],[1231length,mount sunflower:placeid/2],[4399length,mount elbert:placeid/2],[105length,walton county:placeid/2],[2037length,mount mitchell:placeid/2],[216length,snake river:placeid/2],[21length,colorado river:placeid/2],[4341length,north palisade:mountainid/2],[6194length,mount mckinley:placeid/2],[2025length,clingmans dome:placeid/2],[4370length,la plata:mountainid/2],[3424length,mount hood:placeid/2],[4349length,grays:mountainid/2],[0length,potomac river:placeid/2],[4327length,yale:mountainid/2],[87length,little river:placeid/2],[4439length,alverstone:mountainid/2],[2667length,guadalupe peak:placeid/2],[1917length,mount washington:placeid/2],[1746length,mount rogers:placeid/2],[595length,timms hill:placeid/2],[4317length,sill:mountainid/2],[383length,franklin township:placeid/2],[0length,atlantic ocean:placeid/2],[-85length,death valley:placeid/2],[4996length,blackburn:mountainid/2],[1606length,mount katahdin:placeid/2],[125length,tenleytown:placeid/2],[1024length,backbone mountain:placeid/2],[1263length,black mountain:placeid/2],[1339length,mount mansfield:placeid/2],[549length,kootenai river:placeid/2],[2207length,harney peak:placeid/2],[4327length,princeton:mountainid/2],[0length,delaware river:placeid/2],[4766length,churchill:mountainid/2],[1085length,sassafras mountain:placeid/2],[4418length,whitney:mountainid/2],[725length,mount frissell:placeid/2],[610length,beaver dam creek:placeid/2],[229length,red river:placeid/2],[85length,mississippi river:placeid/2],[4316length,el diente:mountainid/2],[550length,high point:placeid/2],[132length,ohio river:placeid/2],[4348length,quandary:mountainid/2],[4345length,longs:mountainid/2],[183length,lake superior:placeid/2],[4395length,harvard:mountainid/2],[4123length,kings peak:placeid/2],[4327length,belford:mountainid/2],[4442length,hunter:mountainid/2],[1654length,johnson township:placeid/2],[4320length,bross:mountainid/2],[98length,ohio river:placeid/2],[4392length,rainier:mountainid/2],[4205length,mauna kea:placeid/2],[3859length,borah peak:placeid/2],[1064length,mount greylock:placeid/2],[4317length,wrangell:mountainid/2],[4577length,hubbard:mountainid/2],[4361length,uncompahgre:mountainid/2],[163length,driskill mountain:placeid/2],[55length,mississippi river:placeid/2],[1629length,mount marcy:placeid/2],[5489length,st. elias:mountainid/2],[4418length,mount whitney:placeid/2],[4317length,shasta:mountainid/2],[-1length,new orleans:placeid/2],[4349length,torreys:mountainid/2],[4372length,bianca:mountainid/2],[4357length,crestone:mountainid/2],[0length,pacific ocean:placeid/2],[6194length,mckinley:mountainid/2],[135length,centerville:placeid/2],[1458length,brasstown bald:placeid/2],[945length,belle fourche river:placeid/2],[4005length,boundary peak:placeid/2],[859length,red bluff reservoir:placeid/2],[4315length,maroon:mountainid/2],[17length,ouachita river:placeid/2],[979length,mount davis:placeid/2],[256length,southeast corner:placeid/2],[78length,mississippi river:placeid/2],[701length,eagle mountain:placeid/2],[472length,campbell hill:placeid/2],[4842length,south buttress:mountainid/2],[4337length,shavano:mountainid/2],[511length,ocheyedan mound:placeid/2],[0length,gulf of mexico:placeid/2],[4348length,evans:mountainid/2],[4011length,wheeler peak:placeid/2],[73length,potomac river:placeid/2],[5304length,foraker:mountainid/2],[29length,lake champlain:placeid/2],[207length,verdigris river:placeid/2],[3901length,granite peak:placeid/2],[246length,woodall mountain:placeid/2],[146length,mississippi river:placeid/2],[4317length,kit carson:mountainid/2],[734length,cheaha mountain:placeid/2],[5044length,bona:mountainid/2],[70length,st. francis river:placeid/2],[282length,mount davidson:placeid/2],[174length,lake erie:placeid/2],[604length,mount curwood:placeid/2],[1069length,white butte:placeid/2],[3851length,humphreys peak:placeid/2],[4490length,east buttress:mountainid/2],[4342length,wilson:mountainid/2],[247length,jerimoth hill:placeid/2],[4964length,kennedy:mountainid/2],[143length,colorado river:placeid/2],[4392length,mount rainier:placeid/2],[4785length,vancouver:mountainid/2],[540length,taum sauk mountain:placeid/2],[4349length,antero:mountainid/2],[284length,big stone lake:placeid/2],[4327length,crestone needle:mountainid/2],[376length,charles mound:placeid/2],[4399length,elbert:mountainid/2],[0length,long island sound:placeid/2],[4429length,browne tower:mountainid/2],[4202length,gannett peak:placeid/2],[839length,magazine mountain:placeid/2],[1021length,arkansas river:placeid/2],[4382length,williamson:mountainid/2],[4949length,sanford:mountainid/2],[4663length,fairweather:mountainid/2],[4348length,castle:mountainid/2],[4520length,bear:mountainid/2]}:{[length,mountainid/2],[length,placeid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[2] => {}:error]} | answer(A,(elevation(B,A),const(B,cityid('san jose',_))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:464: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:465: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:466: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:467: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:468: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:469: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B),traverse(B,A))))
        Example tmp83nzzasm.dlog:470: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:471: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:472: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:473: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:474: query => {[houston_tx:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:475: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:476: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:477: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:478: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:479: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp83nzzasm.dlog:480: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmp83nzzasm.dlog:481: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))
        Example tmp83nzzasm.dlog:482: query => {[3968000length]} | answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,countryid(usa))))))
        Example tmp83nzzasm.dlog:483: query => {[4count]} | answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))
        Example tmp83nzzasm.dlog:484: query => {[wheeler peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:485: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmp83nzzasm.dlog:486: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:487: query => {} | answer(A,longest(A,(river(A),loc(A,B),state(B),loc(C,B),highest(C,place(C)))))
        Example tmp83nzzasm.dlog:488: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),longest(B,(river(B),traverse(B,A)))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:489: query => {[Join failed syntactically: {[usa,usa:countryid/2,usa:countryid/2,cumberland:riverid/2],[usa,usa:countryid/2,usa:countryid/2,san juan:riverid/2],[usa,usa:countryid/2,usa:countryid/2,powder:riverid/2],[usa,usa:countryid/2,usa:countryid/2,smoky hill:riverid/2],[usa,usa:countryid/2,usa:countryid/2,pearl:riverid/2],[usa,usa:countryid/2,usa:countryid/2,washita:riverid/2],[usa,usa:countryid/2,usa:countryid/2,ohio:riverid/2],[usa,usa:countryid/2,usa:countryid/2,canadian:riverid/2],[usa,usa:countryid/2,usa:countryid/2,ouachita:riverid/2],[usa,usa:countryid/2,usa:countryid/2,bighorn:riverid/2],[usa,usa:countryid/2,usa:countryid/2,st. francis:riverid/2],[usa,usa:countryid/2,usa:countryid/2,missouri:riverid/2],[usa,usa:countryid/2,usa:countryid/2,columbia:riverid/2],[usa,usa:countryid/2,usa:countryid/2,mississippi:riverid/2],[usa,usa:countryid/2,usa:countryid/2,niobrara:riverid/2],[usa,usa:countryid/2,usa:countryid/2,red:riverid/2],[usa,usa:countryid/2,usa:countryid/2,yellowstone:riverid/2],[usa,usa:countryid/2,usa:countryid/2,pecos:riverid/2],[usa,usa:countryid/2,usa:countryid/2,allegheny:riverid/2],[usa,usa:countryid/2,usa:countryid/2,wabash:riverid/2],[usa,usa:countryid/2,usa:countryid/2,little missouri:riverid/2],[usa,usa:countryid/2,usa:countryid/2,white:riverid/2],[usa,usa:countryid/2,usa:countryid/2,connecticut:riverid/2],[usa,usa:countryid/2,usa:countryid/2,delaware:riverid/2],[usa,usa:countryid/2,usa:countryid/2,tennessee:riverid/2],[usa,usa:countryid/2,usa:countryid/2,south platte:riverid/2],[usa,usa:countryid/2,usa:countryid/2,rio grande:riverid/2],[usa,usa:countryid/2,usa:countryid/2,roanoke:riverid/2],[usa,usa:countryid/2,usa:countryid/2,snake:riverid/2],[usa,usa:countryid/2,usa:countryid/2,colorado:riverid/2],[usa,usa:countryid/2,usa:countryid/2,cheyenne:riverid/2],[usa,usa:countryid/2,usa:countryid/2,chattahoochee:riverid/2],[usa,usa:countryid/2,usa:countryid/2,clark fork:riverid/2],[usa,usa:countryid/2,usa:countryid/2,gila:riverid/2],[usa,usa:countryid/2,usa:countryid/2,wateree catawba:riverid/2],[usa,usa:countryid/2,usa:countryid/2,north platte:riverid/2],[usa,usa:countryid/2,usa:countryid/2,green:riverid/2],[usa,usa:countryid/2,usa:countryid/2,tombigbee:riverid/2],[usa,usa:countryid/2,usa:countryid/2,republican:riverid/2],[usa,usa:countryid/2,usa:countryid/2,arkansas:riverid/2],[usa,usa:countryid/2,usa:countryid/2,cimarron:riverid/2],[usa,usa:countryid/2,usa:countryid/2,hudson:riverid/2],[usa,usa:countryid/2,usa:countryid/2,neosho:riverid/2],[usa,usa:countryid/2,usa:countryid/2,potomac:riverid/2],[usa,usa:countryid/2,usa:countryid/2,rock:riverid/2],[usa,usa:countryid/2,usa:countryid/2,dakota:riverid/2]}:{[date_month,countryid/2,countryid/2,riverid/2],[frac,countryid/2,countryid/2,riverid/2],[length^2,countryid/2,countryid/2,riverid/2],[date_day,countryid/2,countryid/2,riverid/2],[count/length^2,countryid/2,countryid/2,riverid/2],[date,countryid/2,countryid/2,riverid/2],[money/time_duration,countryid/2,countryid/2,riverid/2],[date_time,countryid/2,countryid/2,riverid/2],[rank,countryid/2,countryid/2,riverid/2],[count,countryid/2,countryid/2,riverid/2],[date_year,countryid/2,countryid/2,riverid/2],[money,countryid/2,countryid/2,riverid/2],[length,countryid/2,countryid/2,riverid/2],[name,countryid/2,countryid/2,riverid/2],[time_duration,countryid/2,countryid/2,riverid/2]}[3] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(population(B,A),largest(B,(state(B),next_to(B,C),const(C,countryid(usa))))))
        Example tmp83nzzasm.dlog:490: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:491: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:492: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:493: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:494: query => {[tennessee:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),state(B),next_to(B,C),const(C,stateid(texas)))))
        Example tmp83nzzasm.dlog:495: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:496: query => {[2.62e-07count/length^2]} | answer(A,(density(B,A),largest(B,state(B))))
        Example tmp83nzzasm.dlog:497: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmp83nzzasm.dlog:498: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:499: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmp83nzzasm.dlog:500: query => {[waukegan_il:cityid/3],[evanston_il:cityid/3],[peoria_il:cityid/3],[columbia_mo:cityid/3],[springfield_mo:cityid/3],[independence_mo:cityid/3],[rochester_mn:cityid/3],[oak lawn_il:cityid/3],[bloomington_mn:cityid/3],[waterloo_ia:cityid/3],[rockford_il:cityid/3],[cicero_il:cityid/3],[cedar rapids_ia:cityid/3],[racine_wi:cityid/3],[monroe_la:cityid/3],[champaign_il:cityid/3],[fort smith_ar:cityid/3],[arlington heights_il:cityid/3],[dubuque_ia:cityid/3],[west allis_wi:cityid/3],[duluth_mn:cityid/3],[skokie_il:cityid/3],[sioux city_ia:cityid/3],[kenosha_wi:cityid/3],[appleton_wi:cityid/3],[green bay_wi:cityid/3],[st. joseph_mo:cityid/3],[joliet_il:cityid/3],[springfield_il:cityid/3],[aurora_il:cityid/3],[decatur_il:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[davenport_ia:cityid/3],[lafayette_la:cityid/3],[elgin_il:cityid/3],[kenner_la:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp83nzzasm.dlog:501: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:502: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmp83nzzasm.dlog:504: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:505: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:506: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:507: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp83nzzasm.dlog:508: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)))
        Example tmp83nzzasm.dlog:509: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:510: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmp83nzzasm.dlog:511: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example tmp83nzzasm.dlog:512: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:513: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example tmp83nzzasm.dlog:514: query => {[67042count],[94201count],[61195count],[71462count],[138857count],[70525count],[90027count],[149230count],[70508count],[62762count],[98315count],[109943count],[91449count],[112560count],[118102count],[72496count],[84997count],[72331count],[67053count],[101261count],[73240count]} | answer(A,(population(B,A),major(B),city(B),loc(B,C),const(C,stateid(texas))))
        Example tmp83nzzasm.dlog:515: query => {[juneau_ak:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),loc(C,B),highest(C,place(C))))
        Example tmp83nzzasm.dlog:516: query => {[colorado:stateid/2]} | answer(A,most(A,B,(state(A),loc(B,A),river(B))))
        Example tmp83nzzasm.dlog:517: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:518: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO EXECUTE
        Example tmp83nzzasm.dlog:520: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:521: query => {[chicago_il:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),state(B),const(C,riverid(mississippi)),traverse(C,B))))
        Example tmp83nzzasm.dlog:522: query => {[texas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:523: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:524: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:525: query => {[louisiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:526: query => {[Join failed syntactically: {[2.40e+10length^2,new hampshire:stateid/2],[2.49e+10length^2,vermont:stateid/2],[1.83e+11length^2,north dakota:stateid/2],[2.20e+11length^2,utah:stateid/2],[1.76e+11length^2,washington:stateid/2],[2.15e+10length^2,massachusetts:stateid/2],[2.53e+11length^2,wyoming:stateid/2],[2.86e+11length^2,nevada:stateid/2],[2.85e+09length^2,district of columbia:stateid/2],[1.36e+11length^2,north carolina:stateid/2],[5.29e+09length^2,delaware:stateid/2],[2.95e+11length^2,arizona:stateid/2],[2.13e+11length^2,kansas:stateid/2],[1.46e+11length^2,illinois:stateid/2],[3.14e+09length^2,rhode island:stateid/2],[2.13e+11length^2,kentucky:stateid/2],[1.07e+11length^2,ohio:stateid/2],[1.27e+11length^2,new york:stateid/2],[2.19e+11length^2,minnesota:stateid/2],[1.24e+11length^2,mississippi:stateid/2],[1.06e+11length^2,virginia:stateid/2],[1.34e+11length^2,alabama:stateid/2],[3.81e+11length^2,montana:stateid/2],[1.17e+11length^2,pennsylvania:stateid/2],[1.30e+10length^2,connecticut:stateid/2],[6.27e+10length^2,west virginia:stateid/2],[1.53e+11length^2,georgia:stateid/2],[2.69e+11length^2,colorado:stateid/2],[2.02e+10length^2,new jersey:stateid/2],[6.91e+11length^2,texas:stateid/2],[9.38e+10length^2,indiana:stateid/2],[1.81e+11length^2,missouri:stateid/2],[1.52e+11length^2,michigan:stateid/2],[2.00e+11length^2,nebraska:stateid/2],[1.81e+11length^2,oklahoma:stateid/2],[2.51e+11length^2,oregon:stateid/2],[1.46e+11length^2,iowa:stateid/2],[4.09e+11length^2,california:stateid/2],[1.24e+11length^2,louisiana:stateid/2],[2.00e+11length^2,south dakota:stateid/2],[1.38e+11length^2,arkansas:stateid/2],[2.15e+11length^2,idaho:stateid/2],[1.53e+12length^2,alaska:stateid/2],[1.09e+11length^2,tennessee:stateid/2],[3.15e+11length^2,new mexico:stateid/2],[1.78e+11length^2,florida:stateid/2],[8.06e+10length^2,south carolina:stateid/2],[2.71e+10length^2,maryland:stateid/2],[1.68e+10length^2,hawaii:stateid/2],[8.62e+10length^2,maine:stateid/2],[1.45e+11length^2,wisconsin:stateid/2]}:{[length^2,stateid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[2] => {}:error]} | answer(A,(area(B,A),state(B),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:527: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:528: query => {[new york_ny:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmp83nzzasm.dlog:529: query => {[pecos:riverid/2],[washita:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:530: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO EXECUTE
        Example tmp83nzzasm.dlog:532: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:533: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmp83nzzasm.dlog:534: query => {[california:stateid/2]} | answer(A,largest(B,(population(A,B),state(A))))
        Example tmp83nzzasm.dlog:535: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:536: query => {[missouri:stateid/2],[tennessee:stateid/2]} | answer(A,most(A,B,(state(A),next_to(A,B),state(B))))
        Example tmp83nzzasm.dlog:537: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmp83nzzasm.dlog:538: query => {[6.91e+11length^2]} | answer(A,(area(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:539: query => {[6.91e+11length^2]} | answer(A,(size(B,A),const(B,stateid(texas))))
        Example tmp83nzzasm.dlog:540: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example tmp83nzzasm.dlog:541: query => {[Join failed syntactically: {[usa:countryid/2]}:{[countryid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(population(B,A),state(B),loc(C,B),state(C),const(D,riverid(mississippi)),traverse(D,C)))
      } [8.4s, cum. 16s]
    } [16s, cum. 16s]
    Randomly splitting 536 general examples
    376 training examples, 160 test examples
  } [16s, cum. 16s]
  Execution directory: /Users/yi-changchung/Desktop/OSU/CSE5525/HW3/state/execs/37.exec
} [16s]
